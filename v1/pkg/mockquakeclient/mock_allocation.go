// (C) Copyright 2021-2023 Hewlett Packard Enterprise Development LP

// Code generated by MockGen. DO NOT EDIT.
// Source: interface_allocation.go

// Package mockquakeclient is a generated GoMock package.
package mockquakeclient

import (
	context "context"
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	client "github.com/hewlettpackard/hpegl-metal-client/v1/pkg/client"
)

// MockAllocationAPI is a mock of AllocationAPI interface.
type MockAllocationAPI struct {
	ctrl     *gomock.Controller
	recorder *MockAllocationAPIMockRecorder
}

// MockAllocationAPIMockRecorder is the mock recorder for MockAllocationAPI.
type MockAllocationAPIMockRecorder struct {
	mock *MockAllocationAPI
}

// NewMockAllocationAPI creates a new mock instance.
func NewMockAllocationAPI(ctrl *gomock.Controller) *MockAllocationAPI {
	mock := &MockAllocationAPI{ctrl: ctrl}
	mock.recorder = &MockAllocationAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAllocationAPI) EXPECT() *MockAllocationAPIMockRecorder {
	return m.recorder
}

// GetBySite mocks base method.
func (m *MockAllocationAPI) GetBySite(ctx context.Context, localVarOptionals *client.AllocationApiGetBySiteOpts) ([]client.Allocation, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBySite", ctx, localVarOptionals)
	ret0, _ := ret[0].([]client.Allocation)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetBySite indicates an expected call of GetBySite.
func (mr *MockAllocationAPIMockRecorder) GetBySite(ctx, localVarOptionals interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBySite", reflect.TypeOf((*MockAllocationAPI)(nil).GetBySite), ctx, localVarOptionals)
}

// StorageGetBySite mocks base method.
func (m *MockAllocationAPI) StorageGetBySite(ctx context.Context, localVarOptionals *client.AllocationApiStorageGetBySiteOpts) ([]client.AllocationStorage, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StorageGetBySite", ctx, localVarOptionals)
	ret0, _ := ret[0].([]client.AllocationStorage)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// StorageGetBySite indicates an expected call of StorageGetBySite.
func (mr *MockAllocationAPIMockRecorder) StorageGetBySite(ctx, localVarOptionals interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StorageGetBySite", reflect.TypeOf((*MockAllocationAPI)(nil).StorageGetBySite), ctx, localVarOptionals)
}
