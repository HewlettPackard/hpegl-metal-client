// (C) Copyright 2021-2024 Hewlett Packard Enterprise Development LP

/*
 * HPE GreenLake for bare metal API
 *
 * This Metal Client REST API provides access to bare metal as-a-service (BMaaS) within a single project context. Clients are able to create fully-provisioned hosts, storage volumes, and project-specific private networks in an isolated project environment.   Project-owned resources that can be accessed via this API include - Host,  Volume, VolumeAttachment, Network (project private), and SSH Key. Each API  call is done within a single project context. The specific Project identifier  must be provided within the header of for each REST call. The server will  validate that the provided authentication credentials (JWTs) are valid  for  the referenced project before any operation is performed. If a single credential is valid for multiple projects, the client must still reference a single project  in the header for each API call.    Clients can also access information about available services and resources through the AvailableResources object. This object provides detailed  information about the OS imaging options, the machine size options, the storage volume options, and data center locations which are needed when creating hosts and volumes.  
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package client
// Partition It describes a disk partition.
type Partition struct {
	Type PartitionType `json:"Type"`
	Formula PartitionFormula `json:"Formula"`
	// Name is an optional name for the partition, only usable with GPT partition table types.
	Name string `json:"Name"`
	// Where to mount the partition, it must be set for partitions that are filesystem types.
	MountPoint string `json:"MountPoint"`
	// A partitionID may be explicitly set for the partition and this allows for out-of-order partitions in the table (like VMWare).  If zero, sequential partitions are created starting at 1. Gaps in the partition ID numbering is also allowable (VMWare).
	PartitionID int64 `json:"PartitionID"`
	// Identify a bootable partition.
	Bootable bool `json:"Bootable"`
	// Provide options for the partition's creation.
	MakeOptions []string `json:"MakeOptions"`
	// Provide options for the patition mount. If empty, \"defaults\" will be used for filesystem partition types. MountOptions will be placed in the \"options\" field for the partition in /etc/fstab.
	MountOptions string `json:"MountOptions"`
}
