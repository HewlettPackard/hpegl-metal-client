openapi: 3.0.0
info:
  description: "This Metal Client REST API provides access to bare metal as-a-service\
    \ (BMaaS) within a single project context. Clients are able to create fully-provisioned\
    \ hosts, storage volumes, and project-specific private networks in an isolated\
    \ project environment. \n\nProject-owned resources that can be accessed via this\
    \ API include - Host,  Volume, VolumeAttachment, Network (project private), and\
    \ SSH Key. Each API  call is done within a single project context. The specific\
    \ Project identifier  must be provided within the header of for each REST call.\
    \ The server will  validate that the provided authentication credentials (JWTs)\
    \ are valid  for  the referenced project before any operation is performed. If\
    \ a single credential is valid for multiple projects, the client must still reference\
    \ a single project  in the header for each API call.  \n\nClients can also access\
    \ information about available services and resources through the AvailableResources\
    \ object. This object provides detailed  information about the OS imaging options,\
    \ the machine size options, the storage volume options, and data center locations\
    \ which are needed when creating hosts and volumes. \n"
  license:
    name: HPE End User License Agreement
    url: https://www.hpe.com/us/en/software/licensing.html
  title: HPE GreenLake for bare metal API
  version: v1
servers:
- description: HPE GreenLake Central
  url: https://client.greenlake.hpe.com{basePath}
  variables:
    basePath:
      default: /api/metal/rest/v1
      description: URL prefix for endpoints
security:
- BearerAuth: []
  Project: []
- BearerAuth: []
  Membership: []
tags:
- description: |
    Read-only operation to get api server build version information.
  name: version
- description: |
    Operations related to Projects. A Project defines an isolated space  for creating Hosts, Volumes, and private Networks.  A project is a.k.a.   Compute Group.
  name: projects
- description: |
    Operations related to SSH Keys. Clients may define SSH Keys that can then be referenced by ID when creating a Host.
  name: sshkeys
- description: |
    Operations related to Hosts. A host is a fully-provisioned physical server.  Clients may create, view, list, and delete hosts. A host is a.k.a. Compute Instance.
  name: hosts
- description: |
    Operations related to Volumes. A Volume is an external storage volume that persists independent of the associated host.
  name: volumes
- description: |
    Operations related to VolumeAttachments that describe how a host is connected to a volume.
  name: volume-attachments
- description: |
    Operations related to Networks.
  name: networks
- description: |
    Operations related to listing information that is needed to construct create host and create volume calls. This provides a detailed information about the OS imaging options,  the machine size (a.k.a. Compute Instance Type) options, the storage volume options,  data center locations, and such that are needed when creating hosts and volumes.
  name: available-resources
- description: |
    Operations related to retrieving information about resource usage within the project.
  name: usage-reports
- description: |
    Operations related to listing information related to projects.
  name: projects-info
- description: |
    Operations related to IP pools.
  name: ippools
- description: |
    Operations related to listing information about allocation by servers and storage.
  name: allocation
paths:
  /version:
    get:
      operationId: Versions_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      security:
      - BearerAuth: []
        Membership: []
      - BearerAuth: []
      summary: Get api server build version
      tags:
      - version
  /projects:
    get:
      description: Returns an array of all Project objects that have been created.
        This includes profile information for the project and project limits on resouces
        like hosts, private networks, volumes, and volume capacity. If GreenLake IAM
        issued token is used for authentication, then it is required to pass either
        'Space' or 'spaceid' header. When both are set, 'Space' header is ignored.
      operationId: Projects_list
      parameters:
      - description: GreenLake space ID
        example: 95688cf9-82ff-4e32-80fc-2b0b41648dab
        in: header
        name: spaceid
        schema:
          type: string
      - description: GreenLake space name
        example: Default
        in: header
        name: Space
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
          description: success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      security:
      - BearerAuth: []
        Membership: []
      - BearerAuth: []
      summary: List of all Projects within an organization or cluster
      tags:
      - projects
    post:
      description: Adds a new Project which creates an isolated space for creating
        Hosts, Volumes, and private Networks. A project is often aligned to a specific
        team within an organization or a cluster. If GreenLake IAM issued token is
        used for authentication, then it is required to pass either 'Space' or 'spaceid'
        header. When both are set, 'Space' header is ignored. Note that Hoster or
        BMaaS Access Owner role is required for this operation.
      operationId: Project_add
      parameters:
      - description: GreenLake space name
        example: Default
        in: header
        name: Space
        schema:
          type: string
      - description: GreenLake space ID
        example: 95688cf9-82ff-4e32-80fc-2b0b41648dab
        in: header
        name: spaceid
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProject'
        description: NewProject parameters to create a new Project
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid input
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      security:
      - BearerAuth: []
        Membership: []
      - BearerAuth: []
      summary: Create a new project
      tags:
      - projects
  /projects/{projectId}:
    delete:
      description: Deletes the Project with the matching ID. Note that Hoster or BMaaS
        Access Owner role is required for this operation.
      operationId: Project_delete
      parameters:
      - description: ID of project to delete
        in: path
        name: projectId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      security:
      - BearerAuth: []
        Membership: []
      - BearerAuth: []
      summary: Delete a Project
      tags:
      - projects
    get:
      description: Returns a single Project object with its matching ID This includes
        profile information for the project and project limits on resouces like hosts,
        private networks, volumes, and volume capacity.
      operationId: Project_getByID
      parameters:
      - description: ID of project to return
        in: path
        name: projectId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      security:
      - BearerAuth: []
        Membership: []
      - BearerAuth: []
      summary: Retrieve a project by its ID
      tags:
      - projects
    put:
      description: Updates a project with a matching ID. Only Project 'Name', 'Profile'
        and 'Limits' can be updated with this operation. Note that Hoster or BMaaS
        Access Owner role is required for this operation.
      operationId: Project_update
      parameters:
      - description: ID of project to update
        in: path
        name: projectId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
        description: Project parameters to update an existing Project
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid input
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      security:
      - BearerAuth: []
        Membership: []
      - BearerAuth: []
      summary: Update a project by its ID
      tags:
      - projects
  /projects-info:
    get:
      description: |-
        Returns an object with information on projects, machine sizes, and volume flavors.  The 'Projects' list includes projects authorized for a user, and the 'MachineSizes' and  'VolumeFlavors' list include only those machine sizes and volume flavors permitted for projects.

        When GreenLake IAM issued token is used for authentication, it is required to  pass either 'Space' or 'spaceid' header. When both are set, 'Space' header is ignored.
      operationId: ProjectsInfo_list
      parameters:
      - description: GreenLake space name
        example: Default
        in: header
        name: Space
        schema:
          type: string
      - description: GreenLake space ID
        example: 95688cf9-82ff-4e32-80fc-2b0b41648dab
        in: header
        name: spaceid
        schema:
          type: string
      - description: GreenLake site ID
        example: 95688cf9-82ff-4e32-80fc-2b0b41648dab
        in: query
        name: siteid
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsInfo'
          description: success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      security:
      - BearerAuth: []
        Membership: []
      - BearerAuth: []
      summary: List of all projects info within an organization or cluster for which
        user is authorized.
      tags:
      - projects-info
  /sshkeys:
    get:
      description: Returns an array of all SSHKey objects defined within the project.
      operationId: SSHKeys_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SSHKey'
                type: array
          description: success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: List all sshkeys in project
      tags:
      - sshkeys
    post:
      description: Adds a new SSH Key that can be referenced when creating a Host
      operationId: SSHKey_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSSHKey'
        description: SSH Key that is to be added to the project
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid input
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Add a new SSH Key
      tags:
      - sshkeys
  /sshkeys/{sshkeyId}:
    delete:
      description: Deletes the SSH key with the matching ID
      operationId: SSHKey_delete
      parameters:
      - description: ID of sshkey to delete
        in: path
        name: sshkeyId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Delete an SSH key
      tags:
      - sshkeys
    get:
      description: Returns a single SSH key with matching ID
      operationId: SSHKey_getByID
      parameters:
      - description: ID of sshkey to return
        in: path
        name: sshkeyId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Retrieve SSH Key by ID
      tags:
      - sshkeys
    put:
      description: ""
      operationId: SSHKey_update
      parameters:
      - description: ID of sshkey to update
        in: path
        name: sshkeyId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SSHKey'
        description: Updated SSH key
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SSHKey'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid input
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Update an existing SSH Key.  Only 'Name' or 'Key' fields can be changed.
      tags:
      - sshkeys
    summary: Operations on a single SSH Key
  /hosts:
    get:
      description: Returns an array of all Host objects defined within the project.
      operationId: Hosts_list
      parameters:
      - description: Includes deleted Host objects in the response when set to "true".
        in: query
        name: all
        required: false
        schema:
          enum:
          - "true"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Host'
                type: array
          description: success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: List all Hosts in project
      tags:
      - hosts
    post:
      description: |-
        Creates a new host object which kicks off the provisioning of a physical server in accordance to the attributes provided for the Host object.  Most values for these options must be selected from the set of options provided by the get available-resources API call.
        The SvcFlavor, SvcVersion, LocationID, SSHKeyIDs, and Network attribute must all be set with appropriate ID values from the available-resources call.
      operationId: Host_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewHost'
        description: Defines the configuration of the desired host. See the schema
          for descriptions of individual attributes.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid input
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Create a new Host
      tags:
      - hosts
  /hosts/{hostId}:
    delete:
      description: Deletes the Host with the matching ID.  A host in the 'Ready' state
        must first be powered-off before a delete will be permitted.  Deletes to hosts
        in other states is permitted regardless of the power state
      operationId: Host_delete
      parameters:
      - description: ID of Host to delete
        in: path
        name: hostId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Delete a Host
      tags:
      - hosts
    get:
      description: Returns a single Host with matching ID
      operationId: Host_getByID
      parameters:
      - description: ID of Host to return
        in: path
        name: hostId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Retrieve Host by ID
      tags:
      - hosts
    put:
      description: Updates the Host with the matching ID.  Update is permitted only
        if the host is in the 'Ready' or 'Connection Updating Failed' state.  Only
        the Host 'Description', 'Networks', 'NetworkForDefaultRoute', 'NetworkUntagged'
        and 'ISCSIConfig:InitiatorName' can be updated. 'ISCSIConfig:InitiatorName'
        can be updated only if the host has no volumes attached.
      operationId: Host_update
      parameters:
      - description: ID of host to update
        in: path
        name: hostId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Host'
        description: Updated Host
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid input
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Update an existing Host
      tags:
      - hosts
    summary: Operations associated with a specific host
  /hosts/{hostId}/maintenance:
    post:
      description: Do maintenance on a host by executing pre-defined operations. The
        host must be powered off.  The host must also be in the Ready state or in
        the Failed state and in the Maintenance workflow.
      operationId: maintenance
      parameters:
      - description: ID of Host to do maintenance on
        in: path
        name: hostId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Do maintenance on a Host by ID
      tags:
      - hosts
    summary: Do maintenance on a specific host
  /hosts/{hostId}/poweron:
    post:
      description: Powers on a single Host with matching ID
      operationId: powerOn
      parameters:
      - description: ID of Host to power on
        in: path
        name: hostId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Power on Host by ID
      tags:
      - hosts
    summary: Power on a specific host
  /hosts/{hostId}/poweroff:
    post:
      description: Powers off a single Host with matching ID
      operationId: powerOff
      parameters:
      - description: ID of Host to power off
        in: path
        name: hostId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Power off Host by ID
      tags:
      - hosts
    summary: Power off a specific host
  /hosts/{hostId}/powerreset:
    post:
      description: Resets a single Host with matching ID
      operationId: powerReset
      parameters:
      - description: ID of Host to reset
        in: path
        name: hostId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Reset Host by ID
      tags:
      - hosts
    summary: Reset a specific host
  /hosts/{hostId}/bootpxe:
    post:
      description: Sets a single Host with matching ID to attempt PXE boot when next
        booting
      operationId: bootPXE
      parameters:
      - description: ID of Host to set to PXE boot
        in: path
        name: hostId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Set PXE boot order on Host by ID
      tags:
      - hosts
    summary: Set a specific host to attempt PXE boot
  /hosts/{hostId}/boothdd:
    post:
      description: Sets a single Host with matching ID to attempt HDD boot
      operationId: bootHDD
      parameters:
      - description: ID of Host to set to HDD boot
        in: path
        name: hostId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Set HDD boot order on Host by ID
      tags:
      - hosts
    summary: Set a specific host to attempt HDD boot
  /hosts/{hostId}/replace:
    post:
      description: Re-deploys a host with a new machine that satisfies the current
        host settings. Only the machine is replaced, IP addresses, volumes, etc are
        not changed. The host must be powered off.  The host must also be in the Ready
        state or in the Failed state and in the Replace or Maintenace workflow.
      operationId: replace
      parameters:
      - description: ID of Host to replace
        in: path
        name: hostId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Replace Host by ID
      tags:
      - hosts
    summary: Replace a specific host
  /available-resources:
    get:
      description: "Used to get lists of options that are used when creating hosts\
        \ and volumes. A get /available-resources will return an object that includes\
        \ the following arrays:\n* Images - A list of image service IDs along with\
        \ their category (Linux), \n  flavor (ubuntu), and version (18.04)\n\n* MachineSizes\
        \ - A list of machine size IDs along with the machine size \n  names and detailed\
        \ descriptions\n\n* Locations - A list of location IDs along with their country,\
        \ region, \n  and data center.\n\n* Networks - A list of available Network\
        \ IDs along with the network name,\n  location ID, network kind, and host\
        \ usage (Required, Default, Optional)\n\n* MachineInventory - Information\
        \ about the available inventory of machines \n  based on location ID and machine\
        \ size ID.  While this information may \n  change rapidly, it can be used\
        \ by GUIs and systems to restrict host\n  creates to locations with the desired\
        \ machine size.\n\n* StorageInventory - Information about the current available\
        \ storage capacity \n  for a specific volume flavor by site. \n\n* VolumeFlavors\
        \ - A list of volume flavor IDs along with their name and \n  detailed description.\n\
        \n* Volumes - A list of current, existing volumes.  If the volume is in the\n\
        \  the right state, it could be attached to a new Host.\n"
      operationId: AvailableResources_list
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableResources'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid input
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Get lists of available resources for creating hosts and volumes
      tags:
      - available-resources
  /volumes:
    get:
      description: Returns an array of all volumes defined within the project.
      operationId: Volumes_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Volume'
                type: array
          description: success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: List all volumes in project
      tags:
      - volumes
    post:
      description: |
        Adds a new volume to the project.  Volumes may be created separately and then referenced in the create Host call; or volumes may be created directly within the create Host call.
      operationId: Volume_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewVolume'
        description: Volume that is to be added to the project
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
          description: created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid input
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Add a new volume
      tags:
      - volumes
  /volumes/{volumeId}:
    delete:
      description: Deletes the volume with the matching ID
      operationId: Volume_delete
      parameters:
      - description: ID of volume to delete
        in: path
        name: volumeId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Delete a volume
      tags:
      - volumes
    get:
      description: Returns a single volume with matching ID
      operationId: Volume_getByID
      parameters:
      - description: ID of volume to return
        in: path
        name: volumeId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Retrieve volume by ID
      tags:
      - volumes
    put:
      description: "Updates volume with matching ID. Update is permitted only when\
        \ volume is in 'Allocated' or 'Visible' state. Only the Volume 'Capacity'\
        \ can be updated with a value greater than the existing one to expand the\
        \ volume. \n"
      operationId: Volume_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Volume'
        description: Volume object with its ID and Capacity in GiB indicating the
          expanded size to be specified.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Volume'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid input
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Update an existing volume
      tags:
      - volumes
    summary: Operations on a single volume
  /volumes/{volumeId}/attach:
    post:
      description: |
        Attaches the indicated volume to a host identified in the requestBody.   This attachment will create a VolumeAttachment object that contains  details about the connection of the volume and will update the Host  with iSCSI configuration information.
      operationId: Volume_attach
      parameters:
      - description: ID of volume to attach
        in: path
        name: volumeId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeAttachHostUUID'
        description: Unique ID of the Host to which the volume will be attached
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeAttachment'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid input
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Attach existing volume to Host
      tags:
      - volumes
  /volumes/{volumeId}/detach:
    post:
      description: |
        Detaches the indicated volume from the host identified in the requestBody.   This detachment will delete the VolumeAttachment object that contains  details about the connection of the volume and will update the Host  to remove selected iSCSI configuration information.
        Note that the HostID is required in the body of the request to ensure that the operation is well understood and that a volume is not accidently being removed from the wrong host.
      operationId: Volume_detach
      parameters:
      - description: ID of volume to attach
        in: path
        name: volumeId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeAttachHostUUID'
        description: Unique ID of the Host from which a volume will be detached
        required: true
      responses:
        "200":
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid input
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Detach existing volume from Host
      tags:
      - volumes
  /volume-attachments:
    get:
      description: Returns an array of all VolumeAttachments defined within the project.
      operationId: VolumeAttachments_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VolumeAttachment'
                type: array
          description: success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: List all volume attachments in project
      tags:
      - volume-attachments
    post:
      description: Adds a new VolumeAttachment which enables a machine to use a volume.
        Note that this API is for creation of a VolumeAttachment for non-Hosts. A
        VolumeAttachment resource must be deleted using the 'DELETE /volume-attachments/{attachmentId}'
        API. For regular hosts, a VolumeAttachment is created via the 'POST /volumes/{volumeId}/attach'
        API.
      operationId: VolumeAttachments_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewVolumeAttachment'
        description: NewVolumeAttachement parameters to create a new VolumeAttachment.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeAttachment'
          description: created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid input
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Create a new VolumeAttachment
      tags:
      - volume-attachments
  /volume-attachments/{attachmentId}:
    delete:
      description: Deletes the VolumeAttachment with the matching ID
      operationId: VolumeAttachment_delete
      parameters:
      - description: ID of VolumeAttachment to delete
        in: path
        name: attachmentId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Delete a VolumeAttachment
      tags:
      - volume-attachments
    get:
      description: Returns a single volume attachment with matching ID
      operationId: VolumeAttachment_getByID
      parameters:
      - description: ID of volume attachment to return
        in: path
        name: attachmentId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeAttachment'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Retrieve volume attachment by ID
      tags:
      - volume-attachments
    summary: Operations on a single volume attachment
  /networks:
    get:
      description: Returns an array of all network objects defined within the project.
      operationId: Networks_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Network'
                type: array
          description: success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: List all networks in project
      tags:
      - networks
    post:
      description: Adds a new network that can be referenced when creating a Host
      operationId: Network_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewNetwork'
        description: Network that is to be added to the project
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
          description: created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid input
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Add a new network
      tags:
      - networks
  /networks/{networkId}:
    delete:
      description: Deletes the network with the matching ID
      operationId: Network_delete
      parameters:
      - description: ID of network to delete
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Delete a network
      tags:
      - networks
    get:
      description: Returns a single network with matching ID
      operationId: Network_getByID
      parameters:
      - description: ID of network to return
        in: path
        name: networkId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Retrieve network by ID
      tags:
      - networks
    put:
      description: ""
      operationId: Network_update
      parameters:
      - description: ID of network to update
        in: path
        name: networkId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Network'
        description: Updated network
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid input
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Update an existing network.
      tags:
      - networks
    summary: Operations on a single network
  /usage-reports:
    get:
      description: |
        Creates and returns a usage report based on the parameters passed in the request body
      operationId: UsageReport_get
      parameters:
      - description: Start of the billing period
        in: query
        name: start
        required: true
        schema:
          type: string
      - description: End of the billing period, default to now if omitted
        in: query
        name: end
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageReport'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid input
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Get a usage report
      tags:
      - usage-reports
  /ippools:
    get:
      description: Returns an array of all ip pool objects defined within the project.
      operationId: IPPool_list
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IPPool'
                type: array
          description: success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: List all ip pools in project
      tags:
      - ippools
  /ippools/{ippoolId}:
    get:
      description: Returns a single ip pool with matching ID
      operationId: IPPool_getByID
      parameters:
      - description: ID of IP pool to return
        in: path
        name: ippoolId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPPool'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Retrieve IP pool by ID
      tags:
      - ippools
    put:
      description: Update a single ip pool with matching ID. 'DefaultRoute' can only
        be updated if ip pool is not currently in-use.
      operationId: IPPool_update
      parameters:
      - description: ID of IP pool to update
        in: path
        name: ippoolId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPPool'
        description: Update IPPool
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPPool'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Update IP pool by ID
      tags:
      - ippools
    summary: Operations on a single IP pool
  /ippools/{ippoolId}/allocation:
    post:
      description: Allocate IPs from the pool
      operationId: IPPool_allocateIPs
      parameters:
      - description: ID of IP pool to allocate IPs
        in: path
        name: ippoolId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IPAllocation'
              type: array
        description: IPs being requested starting from an optional base IP and their
          usage
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPPool'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Allocate IPs from the pool
      tags:
      - ippools
    summary: Operations on a single IP pool
  /ippools/{ippoolId}/return:
    post:
      description: Return IPs to the pool
      operationId: IPPool_returnIPs
      parameters:
      - description: ID of IP pool to return IPs
        in: path
        name: ippoolId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                example: 15.0.0.1
                type: string
              type: array
        description: IP returned to the pool
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPPool'
          description: success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: invalid content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: not found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Return IPs to the pool
      tags:
      - ippools
    summary: Operations on a single IP pool
  /allocation/servers:
    get:
      description: Returns an array of allocation information for each server instance
        type used by each PCE service. If siteID is present, the information returned
        is specific to that site ID, otherwise the allocation information for all
        sites is returned.
      operationId: allocation_getBySite
      parameters:
      - description: site ID
        in: query
        name: siteID
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Allocation'
                type: array
          description: success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Get servers allocation
      tags:
      - allocation
  /allocation/storage:
    get:
      description: Returns an array of allocation information for each volume type
        used by each PCE service. If siteID is present, the information returned is
        specific to that site ID, otherwise the allocation information for all sites
        is returned.
      operationId: allocation_storage_getBySite
      parameters:
      - description: site ID
        in: query
        name: siteID
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AllocationStorage'
                type: array
          description: success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: internal error
      summary: Get storage allocation
      tags:
      - allocation
components:
  schemas:
    Version:
      example:
        Build: 0.8.6-dev-218-g0b3b1ad
      properties:
        Build:
          example: 0.8.6-dev-218-g0b3b1ad
          type: string
      type: object
    ErrorResponse:
      properties:
        message:
          description: Description of the error condition
          type: string
        details:
          description: Optional verbose description of the error condition
          type: string
      required:
      - message
      type: object
    Project:
      allOf:
      - $ref: '#/components/schemas/ResourceBase'
      - $ref: '#/components/schemas/Project_allOf'
    NewProject:
      example:
        Limits:
          Hosts: 0
          Volumes: 0
          VolumeCapacity: 0
          InstanceTypes:
            "046b6c7f-0b8a-43b9-b35d-6489e6daee90": 1
          PrivateNetworks: 0
        PermittedSites:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 91eec8b5-6460-4532-aad1-47b983edb63c
        Profile:
          TeamDesc: TeamDesc
          EmailVerified: true
          Company: Company
          Email: Email
          Address: Address
          PhoneNumber: PhoneNumber
          PhoneVerified: true
          TeamName: TeamName
        Name: Project foobar
      properties:
        Name:
          example: Project foobar
          type: string
        Profile:
          $ref: '#/components/schemas/Profile'
        Limits:
          $ref: '#/components/schemas/Limits'
        PermittedSites:
          description: Array listing the permitted site IDs
          example:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 91eec8b5-6460-4532-aad1-47b983edb63c
          items:
            format: uuid
            type: string
          type: array
      required:
      - Limits
      - Name
      - Profile
      type: object
    ProjectsInfo:
      example:
        MachineSizes:
        - ProjectsUsed: 5
          Restricted: true
          Available: 7
          OtherUsed: 2
          ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: Name
        - ProjectsUsed: 5
          Restricted: true
          Available: 7
          OtherUsed: 2
          ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: Name
        VolumeFlavors:
        - ProjectsUsed: 9
          Available: 2
          OtherUsed: 3
          Name: Name
        - ProjectsUsed: 9
          Available: 2
          OtherUsed: 3
          Name: Name
        Projects:
        - Status: Enabled
          NumVolumes: 6
          Description: Description
          TotalStorageGB: 1
          Locations:
          - DataCenter: FTC1
            Region: Central
            ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - DataCenter: FTC1
            Region: Central
            ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          NumHosts: 0
          ID: ID
          NumNetworks: 5
          Name: Name
        - Status: Enabled
          NumVolumes: 6
          Description: Description
          TotalStorageGB: 1
          Locations:
          - DataCenter: FTC1
            Region: Central
            ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - DataCenter: FTC1
            Region: Central
            ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          NumHosts: 0
          ID: ID
          NumNetworks: 5
          Name: Name
        Summary:
          NumUnknown: 7
          NumVolumes: 7
          NumOK: 1
          NumWarning: 1
          TotalStorageGB: 1
          Locations:
          - DataCenter: FTC1
            Region: Central
            ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - DataCenter: FTC1
            Region: Central
            ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          NumHosts: 4
          NumCritical: 6
      properties:
        Projects:
          items:
            $ref: '#/components/schemas/ProjectInfo'
          type: array
        MachineSizes:
          items:
            $ref: '#/components/schemas/MachineSizeInfo'
          type: array
        VolumeFlavors:
          items:
            $ref: '#/components/schemas/VolumeFlavorsInfo'
          type: array
        Summary:
          $ref: '#/components/schemas/SummaryInfo'
      type: object
    SSHKey:
      allOf:
      - $ref: '#/components/schemas/ResourceBase'
      - $ref: '#/components/schemas/SSHKey_allOf'
    NewSSHKey:
      properties:
        Name:
          example: Joe's Laptop
          type: string
        Key:
          description: SSH key value
          example: |
            'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCxv1C5uOeG9BBjfQbum9GupGthTFcifS4FNYxZ2ZakN9UcpD05L2lKp4OI6mfCfciOhJ9SHduZWJFM0pYfC99hIsPAHhEwWOjh3/rHKxB/U4RYN4VFWM+ShDv92+k0Hse73HhuiHKVtmRj/fltAeCFm/mPlL+McMYFhFYMIK8b/spKpXxdEBCSowHPGIn3yi0ivPWhC4wcIa9jDIela/a0t/oDnYTeIp2WMLDbpZyQsGHmKopAAvb+83JhwytQMVTI/g5pMerbqPyxKtWaWDVDtpQ7O8G877T5U3kkl4jLLOJywxrvLrfHh1UNdNvPmvRFd+ct9Q5ugj5CIMJHqWTj Joe@Laptop.local'
          type: string
      required:
      - Key
      - Name
      type: object
    Host:
      allOf:
      - $ref: '#/components/schemas/ResourceBase'
      - $ref: '#/components/schemas/Host_allOf'
    NewHost:
      example:
        MachineID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Description: Description of new Host
        NetworkUntagged: 046b6c7f-0b8a-43b9-b35d-6489e6daee92
        UserData: UserData
        LocationID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        VolumeIDs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        MachineSizeID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Labels:
          serviceType: BMaaS
        PreAllocatedIPs:
        - 10.0.0.4
        - 10.0.0.8
        Name: NewHostName
        ServiceID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        NewVolumes:
        - Shareable: true
          Description: Description of New Volume
          FlavorID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Capacity: 10
          Name: NewVolumeName
        - Shareable: true
          Description: Description of New Volume
          FlavorID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Capacity: 10
          Name: NewVolumeName
        ServiceNetsProviderMAC:
          "046b6c7f-0b8a-43b9-b35d-6489e6daee91": a2:c8:93:15:2a:76
        NetworkForDefaultRoute: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        SSHKeyIDs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        NodeID: Node21
        NetworkIDs:
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        Name:
          description: The host name used when installing the host operating system.  Note
            that some OS implementations may require the name to be formatted as a
            fully qualified domain name.
          example: NewHostName
          type: string
        Description:
          example: Description of new Host
          type: string
        ServiceID:
          description: The image service identifier must be identifer of one of the
            available imaging services provided by the AvailableImage array returned
            as part of the get /available-resources call. Images are typically described
            by category (e.g. Linux), flavor (e.g. ubuntu) and version (e.g. 18.04-20190807)
          format: uuid
          type: string
        LocationID:
          description: |-
            The location ID must be one of those provided by the LocationInfo array returned as part of the get /available-resources call.  The locations are typically described by country, region, and data center.
            The location ID must also be one that has sufficient inventory for the selected MachineSize.  See the MachineInventory array as returned by the get /available-resources call to select a location that has machines available with the correct machine size.
          format: uuid
          type: string
        MachineSizeID:
          description: The machine size ID must be one of those listed in the MachineSizes
            array returned as part of the get /available-resources call.  This array
            provides the name and detailed description for each machine size.  Use
            the MachineInventory array provided by the get /available-resources call
            to find a location with an adequate inventory of machines with the desired
            machine size.
          format: uuid
          type: string
        MachineID:
          description: The machine ID is normally not used.
          format: uuid
          type: string
        SSHKeyIDs:
          description: These IDs must correspond to the IDs for SSH keys already created
            within the context of the project.  These SSH keys and those included
            as SSHAuthorizedKeys will be used together to provision SSH keys when
            the machine is imaged.
          items:
            format: uuid
            type: string
          type: array
        NetworkIDs:
          description: The list of IDs corresponding to the networks that will be
            provisioned to the host. These networks must be among those listed in
            the Networks array returned by the get /available-resources call.  This
            list must include the ID for any network identified by the HostUseEnum
            as Required.
          items:
            format: uuid
            type: string
          type: array
        PreAllocatedIPs:
          description: A list of pre-allocated IP addresses to be used for corresponding
            networks. This array of IP addresses, if present, is in one-to-one correspondence
            with Networks.
          example:
          - 10.0.0.4
          - 10.0.0.8
          items:
            type: string
          type: array
        NetworkForDefaultRoute:
          description: The host's default network ID. This needs to be one of the
            values in the  "NetworkIDs" list.
          example: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          format: uuid
          type: string
        NetworkUntagged:
          description: ID of the network selected to be untagged. This needs to be
            one of the values in the  "NetworkIDs" list.
          example: 046b6c7f-0b8a-43b9-b35d-6489e6daee92
          format: uuid
          type: string
        VolumeIDs:
          description: The list of IDs corresponding to existing, unattached volumes
            that should be attached to the new host.  The volume must be one of those
            listed in the Volumes array returned by the get /available-resources call.  In
            addition, the volume must be in the visible state and not a part of any
            current VolumeAttachment (see get volume-attachments)
          items:
            format: uuid
            type: string
          type: array
        ServiceNetsProviderMAC:
          additionalProperties:
            type: string
          description: The map of Service Network (Provider) ID to Provider MAC address.   The
            Service Network must be a provider network provisioned to this host. Any
            Service Networks not included here will default to the physical MAC learned
            during machine discovery.
          example:
            "046b6c7f-0b8a-43b9-b35d-6489e6daee91": a2:c8:93:15:2a:76
          type: object
        NewVolumes:
          description: New volumes may be created and connected to the Host when the
            host is provisioned. The information provided here to create a host is
            the same as required when doing a post /volumes call
          items:
            $ref: '#/components/schemas/AddVolume'
          type: array
        UserData:
          description: User-provided data to be attached to the image configuration
            data.
          type: string
        NodeID:
          description: User-provided data to represent the identity of the host within
            an application environment. For example, this could be set to represent
            the Kubernetes node ID if the host is provisioned as a Kubernetes node.
          example: Node21
          type: string
        Labels:
          additionalProperties:
            type: string
          description: The map of label name to label value for this host.
          example:
            serviceType: BMaaS
          type: object
      required:
      - LocationID
      - MachineSizeID
      - Name
      - NetworkForDefaultRoute
      - NetworkIDs
      - SSHKeyIDs
      - ServiceID
      type: object
    AvailableResources:
      example:
        Networks:
        - IPPoolID: IPPoolID
          Description: Private network for intra-cluster communication
          LocationID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          HostUse: Default
          Purpose: Storage
          ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: Private
        - IPPoolID: IPPoolID
          Description: Private network for intra-cluster communication
          LocationID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          HostUse: Default
          Purpose: Storage
          ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: Private
        Volumes:
        - TargetIQN: TargetIQN
          Shareable: true
          DiscoveryIP: DiscoveryIP
          Description: Description
          FlavorID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Capacity: 0
          LocationID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: MyVolume
        - TargetIQN: TargetIQN
          Shareable: true
          DiscoveryIP: DiscoveryIP
          Description: Description
          FlavorID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Capacity: 0
          LocationID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: MyVolume
        MachineSizes:
        - Details:
            Banner2: Banner2 value
            Banner1: Banner1 value
            Bullets:
            - Bullets
            - Bullets
            Tooltip: Tooltip
            Collection: Collection1
            InfoLink: InfoLink
          ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: HPE-Large
        - Details:
            Banner2: Banner2 value
            Banner1: Banner1 value
            Bullets:
            - Bullets
            - Bullets
            Tooltip: Tooltip
            Collection: Collection1
            InfoLink: InfoLink
          ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: HPE-Large
        VolumeFlavors:
        - Details:
            Banner2: Banner2 value
            Banner1: Banner1 value
            Bullets:
            - Bullets
            - Bullets
            Tooltip: Tooltip
            Collection: Collection1
            InfoLink: InfoLink
          ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: HighPerfFlash
        - Details:
            Banner2: Banner2 value
            Banner1: Banner1 value
            Bullets:
            - Bullets
            - Bullets
            Tooltip: Tooltip
            Collection: Collection1
            InfoLink: InfoLink
          ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Name: HighPerfFlash
        MachineInventory:
        - Number: 0
          LocationID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          SizeID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - Number: 0
          LocationID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          SizeID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Images:
        - Category: Linux
          Description: ubuntu OS also including Docker runtime
          Version: "18.04"
          ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Flavor: ubuntu
        - Category: Linux
          Description: ubuntu OS also including Docker runtime
          Version: "18.04"
          ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Flavor: ubuntu
        Locations:
        - DataCenter: FTC1
          Region: Central
          ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - DataCenter: FTC1
          Region: Central
          ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        StorageInventory:
        - FlavorID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Capacity: 1
          LocationID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - FlavorID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Capacity: 1
          LocationID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        SSHKeys:
        - ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Key: |
            'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCxv1C5uOeG9BBjfQbum9GupGthTFcifS4FNYxZ2ZakN9UcpD05L2lKp4OI6mfCfciOhJ9SHduZWJFM0pYfC99hIsPAHhEwWOjh3/rHKxB/U4RYN4VFWM+ShDv92+k0Hse73HhuiHKVtmRj/fltAeCFm/mPlL+McMYFhFYMIK8b/spKpXxdEBCSowHPGIn3yi0ivPWhC4wcIa9jDIela/a0t/oDnYTeIp2WMLDbpZyQsGHmKopAAvb+83JhwytQMVTI/g5pMerbqPyxKtWaWDVDtpQ7O8G877T5U3kkl4jLLOJywxrvLrfHh1UNdNvPmvRFd+ct9Q5ugj5CIMJHqWTj Joe@Laptop.local'
          Name: ExampleKey
        - ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          Key: |
            'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCxv1C5uOeG9BBjfQbum9GupGthTFcifS4FNYxZ2ZakN9UcpD05L2lKp4OI6mfCfciOhJ9SHduZWJFM0pYfC99hIsPAHhEwWOjh3/rHKxB/U4RYN4VFWM+ShDv92+k0Hse73HhuiHKVtmRj/fltAeCFm/mPlL+McMYFhFYMIK8b/spKpXxdEBCSowHPGIn3yi0ivPWhC4wcIa9jDIela/a0t/oDnYTeIp2WMLDbpZyQsGHmKopAAvb+83JhwytQMVTI/g5pMerbqPyxKtWaWDVDtpQ7O8G877T5U3kkl4jLLOJywxrvLrfHh1UNdNvPmvRFd+ct9Q5ugj5CIMJHqWTj Joe@Laptop.local'
          Name: ExampleKey
      properties:
        Images:
          description: Array listing the available host imaging services
          items:
            $ref: '#/components/schemas/AvailableImage'
          type: array
        Locations:
          description: Array listing the data center locations with available resources
          items:
            $ref: '#/components/schemas/LocationInfo'
          type: array
        Networks:
          description: Array listing the networks available for host connections
          items:
            $ref: '#/components/schemas/AvailableNetwork'
          type: array
        MachineSizes:
          description: Array listing the available machine (server) sizes
          items:
            $ref: '#/components/schemas/MachineSize'
          type: array
        VolumeFlavors:
          description: Array listing the available volume flavors
          items:
            $ref: '#/components/schemas/VolumeFlavor'
          type: array
        Volumes:
          description: Array listing the existing project volumes that could be attached
            to a host
          items:
            $ref: '#/components/schemas/VolumeInfo'
          type: array
        MachineInventory:
          description: Array listing the number of machines of each size in each location
          items:
            $ref: '#/components/schemas/MachineInventory'
          type: array
        StorageInventory:
          description: Array providing information on the amount of available storage
            of each flavor in each location
          items:
            $ref: '#/components/schemas/StorageInventory'
          type: array
        SSHKeys:
          description: Array listing pre-defined SSH keys that could be referenced
            when creating a Host
          items:
            $ref: '#/components/schemas/SSHKeyEntry'
          type: array
      type: object
    Volume:
      allOf:
      - $ref: '#/components/schemas/ResourceBase'
      - $ref: '#/components/schemas/Volume_allOf'
    NewVolume:
      example:
        Shareable: true
        Description: Description of New Volume
        FlavorID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Capacity: 10
        LocationID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Labels:
          serviceType: BMaaS
        Name: NewVolumeName
      properties:
        Name:
          example: NewVolumeName
          type: string
        Description:
          example: Description of New Volume
          type: string
        FlavorID:
          description: Adds a new volume to the project.  This object requires the
            LocationID and is used when a new volume is created independently from
            the host creation therefore requiring a specified location.
          format: uuid
          type: string
        Capacity:
          description: The size of the volume in GiB
          example: 10
          format: int64
          minimum: 0
          type: integer
        Shareable:
          description: Indicates if the volume can be attached to multiple hosts
          type: boolean
        LocationID:
          description: The location of the volume (and the storage array) LocationID
            is one of those listed by the LocationInfo array returned as part of the
            get /available-resources call. Any volumes must be in the same location
            as their attached Host.
          format: uuid
          type: string
        Labels:
          additionalProperties:
            type: string
          description: The map of label name to label value for this volume.
          example:
            serviceType: BMaaS
          type: object
      required:
      - Capacity
      - FlavorID
      - LocationID
      - Name
      type: object
    VolumeAttachHostUUID:
      properties:
        HostID:
          description: Unique ID of the Host to attach or detach volume
          format: uuid
          type: string
      required:
      - HostID
      type: object
    VolumeAttachment:
      allOf:
      - $ref: '#/components/schemas/ResourceBase'
      - $ref: '#/components/schemas/VolumeAttachment_allOf'
    NewVolumeAttachment:
      example:
        VolumeID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Protocol:
          ISCSI:
            HostIPAddress: 10.1.2.3
            CHAPSecret: CHAPSecret
            CHAPUserName: CHAPUserName
            InitiatorName: iqn.1234.com.hpe-initiator
        Name: My Object Name
      properties:
        Name:
          description: Name for the volume attachment. Must be 128 or fewer printable
            characters
          example: My Object Name
          type: string
        VolumeID:
          description: Unique ID of the volume attached to the host
          format: uuid
          type: string
        Protocol:
          $ref: '#/components/schemas/ProtocolParameters'
      required:
      - Protocol
      - VolumeID
      type: object
    Network:
      allOf:
      - $ref: '#/components/schemas/ResourceBase'
      - $ref: '#/components/schemas/Network_allOf'
    NewNetwork:
      example:
        Description: Private network for intra-cluster communication
        NewIPPool:
          NoProxy: localhost,15.10.0.10,test.com
          Proxy: http://proxy.firewall.com:8080/ or http://user:password@proxy.firewall.com:8080
          Description: Description
          BaseIP: 10.128.0.0
          DefaultRoute: 10.128.0.1
          DNS:
          - 8.8.8.8
          - 8.8.8.8
          NTP:
          - 15.0.0.11
          - 15.0.0.11
          Sources:
          - Count: 1
            Base: 10.128.0.2
          - Count: 1
            Base: 10.128.0.2
          IPVersion: IPv4
          Name: Name
        LocationID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        HostUse: Default
        Purpose: Storage
        Name: Private2
      properties:
        Name:
          description: Name of the network
          example: Private2
          type: string
        LocationID:
          description: The location ID is the data center location of the resource.  The
            LocationID must be one of those provided by the LocationInfo array returned
            as part of the get /available-resources call.  The locations are typically
            described by country, region, and data center.
          format: uuid
          type: string
        Description:
          example: Private network for intra-cluster communication
          type: string
        HostUse:
          $ref: '#/components/schemas/NetworkHostUse'
        Purpose:
          $ref: '#/components/schemas/NetworkPurpose'
        NewIPPool:
          $ref: '#/components/schemas/NewIPPool'
      required:
      - LocationID
      - Name
      type: object
    UsageReport:
      description: The composite usage report
      example:
        Hosts:
        - null
        - null
        Volumes:
        - null
        - null
      properties:
        Hosts:
          description: list of Host usage entries for the report window
          items:
            $ref: '#/components/schemas/HostUsageEntry'
          type: array
        Volumes:
          description: list of Volume usage entries for the report window
          items:
            $ref: '#/components/schemas/VolumeUsageEntry'
          type: array
      type: object
    IPPool:
      allOf:
      - $ref: '#/components/schemas/ResourceBase'
      - $ref: '#/components/schemas/IPPool_allOf'
    IPAllocation:
      example:
        Usage: Allocated IP for external storage
        Count: 2
        Base: 10.128.0.1
      properties:
        Base:
          description: An optional base address for the allocation, if not specified
            first available address from the pool will be the base
          example: 10.128.0.1
          type: string
        Count:
          description: Number of addresses to allocate starting from the base
          example: 2
          type: integer
        Usage:
          description: A short description for the allocation
          example: Allocated IP for external storage
          type: string
      required:
      - Base
      - Count
      - Usage
      type: object
    Allocation:
      description: allocation of servers for each PCE service.
      example:
        InstanceFamily: Compute Optimized, General Purpose
        AllocationInfo:
        - CoresCapacity: 5
          RAMCapacity: 2.3021358869347655
          RAMAllocated: 7.061401241503109
          AllocatedCount: 1
          ServiceType: BMaaS
          CoresAllocated: 5
        - CoresCapacity: 5
          RAMCapacity: 2.3021358869347655
          RAMAllocated: 7.061401241503109
          AllocatedCount: 1
          ServiceType: BMaaS
          CoresAllocated: 5
        Total: 0
        ResourceType: ResourceType
        Available: 0
        InstanceType: C2i, M2ie
      properties:
        ResourceType:
          description: Type of the resource the allocation information is listed for.
          type: string
        Total:
          description: Total number of servers.
          type: integer
        InstanceFamily:
          description: Instance type family name.
          example: Compute Optimized, General Purpose
          type: string
        InstanceType:
          description: Server instance type
          example: C2i, M2ie
          type: string
        Available:
          description: Available number of servers.
          minimum: 0
          type: integer
        AllocationInfo:
          description: Array listing of server allocation information for each service
            type.
          items:
            $ref: '#/components/schemas/ServiceServerInfo'
          type: array
      type: object
    AllocationStorage:
      description: allocation of storage for each PCE service.
      example:
        InstanceFamily: Performance Optimized Block
        AllocationInfo:
        - AllocatedCount: 1
          ServiceType: BMaaS
          AllocatedCapacity: 0.5962134
        - AllocatedCount: 1
          ServiceType: BMaaS
          AllocatedCapacity: 0.5962134
        Total: 0.8008282
        ResourceType: ResourceType
        Available: 0.6027456
        InstanceType: SBP
      properties:
        ResourceType:
          description: Type of the resource the allocation information is listed for.
          type: string
        Total:
          description: Total storage capacity in TB
          format: float
          type: number
        InstanceFamily:
          description: Instance type family name.
          example: Performance Optimized Block
          type: string
        InstanceType:
          description: volume type
          example: SBP
          type: string
        Available:
          description: Available storage space in TB
          format: float
          minimum: 0.0
          type: number
        AllocationInfo:
          description: Array listing the storage allocation information for each service
            type.
          items:
            $ref: '#/components/schemas/ServiceStorageInfo'
          type: array
      type: object
    ResourceBase:
      properties:
        ID:
          description: Unique ID for the resource instance as generated by the Metal
            service
          format: uuid
          type: string
        ETag:
          description: Used to determine whether the DB entry has changed since it
            was last read. This value is updated each time the resource is updated.  Client
            must send this value unchanged for any update operation.
          format: uuid
          type: string
        Name:
          description: Common name for the resource instance. Must be 128 or fewer
            printable characters
          example: My Object Name
          type: string
        Created:
          description: Time when the resource was created in the database
          example: 2019-06-27T22:59:01.661Z
          format: date-time
          type: string
        Modified:
          description: Time when the resource was last modified in the database
          example: 2020-02-27T18:28:02.863Z
          format: date-time
          type: string
      required:
      - ETag
      - ID
      - Name
      type: object
    Profile:
      example:
        TeamDesc: TeamDesc
        EmailVerified: true
        Company: Company
        Email: Email
        Address: Address
        PhoneNumber: PhoneNumber
        PhoneVerified: true
        TeamName: TeamName
      properties:
        TeamName:
          description: Name of the Project Team. Must not be empty, maximum 128 printable
            characters
          type: string
        TeamDesc:
          description: Optional description of the Project Team, maximum 256 printable
            characters
          type: string
        Company:
          description: Optional name of the company, maximum 256 printable characters
          type: string
        Address:
          description: Optional address of the company, maximum 256 printable characters
          type: string
        Email:
          description: Optional email address of the contact person for the team,
            maximum 256 printable characters
          type: string
        EmailVerified:
          description: Currently always false
          type: boolean
        PhoneNumber:
          description: Optional phone number of the contact person for the team, maximum
            32 printable characters
          type: string
        PhoneVerified:
          description: Currently always false
          type: boolean
      type: object
    Limits:
      example:
        Hosts: 0
        Volumes: 0
        VolumeCapacity: 0
        InstanceTypes:
          "046b6c7f-0b8a-43b9-b35d-6489e6daee90": 1
        PrivateNetworks: 0
      properties:
        Hosts:
          description: Maximum number of hosts to allow
          minimum: 0
          type: integer
        Volumes:
          description: Maximum number of volumes to allow
          minimum: 0
          type: integer
        VolumeCapacity:
          description: Maximum capacity to allow in TiB
          format: int64
          minimum: 0
          type: integer
        PrivateNetworks:
          description: Maximum number of private networks to allow
          minimum: 0
          type: integer
        InstanceTypes:
          additionalProperties:
            type: integer
          description: Map of instance type ID to maximum number of hosts that can
            be created with that instance type
          example:
            "046b6c7f-0b8a-43b9-b35d-6489e6daee90": 1
          type: object
      required:
      - Hosts
      - PrivateNetworks
      - VolumeCapacity
      - Volumes
      type: object
    ProjectResources:
      properties:
        Hosts:
          description: Number of hosts in use
          minimum: 0
          type: integer
        Volumes:
          description: Number of volumes in use
          minimum: 0
          type: integer
        VolumeCapacity:
          description: Volume capacity in use in TiB
          format: int64
          minimum: 0
          type: integer
        PrivateNetworks:
          description: Number of private networks in use
          minimum: 0
          type: integer
        InstanceTypes:
          additionalProperties:
            type: integer
          description: Number of hosts with the instance type in use
          example:
            "046b6c7f-0b8a-43b9-b35d-6489e6daee90": 1
          type: object
      type: object
    ProjectInfo:
      example:
        Status: Enabled
        NumVolumes: 6
        Description: Description
        TotalStorageGB: 1
        Locations:
        - DataCenter: FTC1
          Region: Central
          ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - DataCenter: FTC1
          Region: Central
          ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        NumHosts: 0
        ID: ID
        NumNetworks: 5
        Name: Name
      properties:
        ID:
          type: string
        Name:
          type: string
        Description:
          type: string
        NumHosts:
          type: integer
        NumVolumes:
          type: integer
        TotalStorageGB:
          type: integer
        Status:
          enum:
          - Enabled
          - Disabled
          type: string
        NumNetworks:
          description: Number of project networks
          type: integer
        SummaryStatus:
          $ref: '#/components/schemas/HealthStatus'
        Locations:
          description: Locations where project resources exist
          items:
            $ref: '#/components/schemas/LocationInfo'
          type: array
      type: object
    MachineSizeInfo:
      example:
        ProjectsUsed: 5
        Restricted: true
        Available: 7
        OtherUsed: 2
        ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Name: Name
      properties:
        Name:
          type: string
        ProjectsUsed:
          type: integer
        OtherUsed:
          type: integer
        Available:
          type: integer
        ID:
          format: uuid
          type: string
        Restricted:
          description: |
            True if the usage of this machine size is restricted  to selected projects, false if the machine size is available to anyone.
          type: boolean
      type: object
    VolumeFlavorsInfo:
      example:
        ProjectsUsed: 9
        Available: 2
        OtherUsed: 3
        Name: Name
      properties:
        Name:
          type: string
        ProjectsUsed:
          type: integer
        OtherUsed:
          type: integer
        Available:
          type: integer
      type: object
    SummaryInfo:
      example:
        NumUnknown: 7
        NumVolumes: 7
        NumOK: 1
        NumWarning: 1
        TotalStorageGB: 1
        Locations:
        - DataCenter: FTC1
          Region: Central
          ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - DataCenter: FTC1
          Region: Central
          ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        NumHosts: 4
        NumCritical: 6
      properties:
        Locations:
          description: Locations where resources exist for all listed projects
          items:
            $ref: '#/components/schemas/LocationInfo'
          type: array
        NumHosts:
          description: Number of hosts for all listed projects
          type: integer
        NumVolumes:
          description: Number of volumes for all listed projects
          type: integer
        TotalStorageGB:
          description: Total storage for all listed projects
          type: integer
        NumOK:
          description: Number of projects with OK health summary status
          type: integer
        NumWarning:
          description: Number of projects with Warning health summary status
          type: integer
        NumCritical:
          description: Number of projects with Critical health summary status
          type: integer
        NumUnknown:
          description: Number of projects with Unknown health summary status
          type: integer
      type: object
    SSHKeyValue:
      description: SSH key value
      example: |
        'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCxv1C5uOeG9BBjfQbum9GupGthTFcifS4FNYxZ2ZakN9UcpD05L2lKp4OI6mfCfciOhJ9SHduZWJFM0pYfC99hIsPAHhEwWOjh3/rHKxB/U4RYN4VFWM+ShDv92+k0Hse73HhuiHKVtmRj/fltAeCFm/mPlL+McMYFhFYMIK8b/spKpXxdEBCSowHPGIn3yi0ivPWhC4wcIa9jDIela/a0t/oDnYTeIp2WMLDbpZyQsGHmKopAAvb+83JhwytQMVTI/g5pMerbqPyxKtWaWDVDtpQ7O8G877T5U3kkl4jLLOJywxrvLrfHh1UNdNvPmvRFd+ct9Q5ugj5CIMJHqWTj Joe@Laptop.local'
      type: string
    HostISCSIConfig:
      nullable: true
      properties:
        InitiatorName:
          description: |
            Fully qualified iSCSI intiator name of this host. This is generated when a host is created and the information is pushed to the new host
          type: string
        CHAPSecret:
          description: |
            CHAP secret as generated by the system when attaching a volume.   Visible in VolumeAttachment object.
          type: string
        CHAPUser:
          description: |
            CHAP user as generated by the system when attaching a volume.   Visible in VolumeAttachment object.
          type: string
        ISCSIDiscoveryAddress:
          type: string
      required:
      - InitiatorName
      type: object
    HostConnection:
      properties:
        Name:
          example: Default
          type: string
        Ports:
          items:
            $ref: '#/components/schemas/HostServerPort'
          type: array
        HA:
          description: Indicates whether the network connection should be a link aggregation
            group (LAG)
          type: boolean
        Speed:
          description: The speed of the physical connection from the server to the
            top of rack switch
          enum:
          - 100Mb
          - 1Gb
          - 10Gb
          - 25Gb
          - 50Gb
          - 40Gb
          - 100Gb
          example: 1Gb
          type: string
        Networks:
          items:
            $ref: '#/components/schemas/HostNetworkConnection'
          type: array
      type: object
    HostPowerState:
      description: Current power status of the underlaying physical server (machine)
      enum:
      - "ON"
      - "OFF"
      - UNKNOWN
      type: string
    HostState:
      description: Overall host state
      enum:
      - New
      - Deleting
      - Deleted
      - Failed
      - Updating Connections
      - Imaging
      - Connecting
      - Booting
      - Ready
      - Replacing
      - Releasing
      - Allocating
      - Maintenance
      example: Ready
      type: string
    HostSubstate:
      description: Host substate within HostState
      enum:
      - ""
      - Abort Deploy
      - Allocate
      - Attach Volumes
      - Boot Service-OS
      - Clear Log
      - Complete
      - Confirm Off
      - Confirm On
      - Connect
      - Connect Provisioning
      - Deploy
      - Detach Volumes
      - Error Recovery
      - Fail Cleanup
      - Failed
      - Init
      - Init Off
      - Isolate
      - In Maintenance
      - Power Off
      - Power On
      - Release
      - Release With Problem
      - Set Boot Disk
      - Snap Log
      - Update
      example: Complete
      type: string
    HostAlertInfo:
      properties:
        Alert:
          description: Identifies the type of alert
          enum:
          - substate-timed-out
          - op-failed
          - vol-att-warning
          - unknown-state
          example: op-failed
          type: string
        State:
          $ref: '#/components/schemas/HostState'
        Substate:
          $ref: '#/components/schemas/HostSubstate'
        Message:
          description: Provides some detailed description about the Alert
          example: 'Operation XXX completed as failed with status: YYY'
          type: string
        Time:
          format: date-time
          type: string
        Ack:
          description: Used to acknowledge the alert so that the UI can list only
            unacknowledged alerts
          type: boolean
      type: object
    HealthStatus:
      enum:
      - OK
      - Warning
      - Critical
      - Unknown
      type: string
    AddVolume:
      example:
        Shareable: true
        Description: Description of New Volume
        FlavorID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Capacity: 10
        Name: NewVolumeName
      properties:
        Name:
          example: NewVolumeName
          type: string
        Description:
          example: Description of New Volume
          type: string
        FlavorID:
          description: This object is used for new volume creation in the host create
            operation. Since host create already has location ID that field is not
            provided in this object.
          format: uuid
          type: string
        Capacity:
          description: The size of the volume in GiB
          example: 10
          format: int64
          minimum: 0
          type: integer
        Shareable:
          description: Indicates if the volume can be attached to multiple hosts
          type: boolean
      type: object
    AvailableImage:
      description: Entry describing an available imaging service
      example:
        Category: Linux
        Description: ubuntu OS also including Docker runtime
        Version: "18.04"
        ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Flavor: ubuntu
      properties:
        ID:
          description: Unique ID for imaging service
          format: uuid
          type: string
        Category:
          description: Top-level grouping of imaging services that may reference an
            OS or application type
          example: Linux
          type: string
        Flavor:
          description: Second-level grouping of imaging services.  Typically references
            a specific OS or application.
          example: ubuntu
          type: string
        Version:
          description: Specific version of a imaging service flavor.
          example: "18.04"
          type: string
        Description:
          description: Additional image information for additional services added
            to the OS
          example: ubuntu OS also including Docker runtime
          type: string
      type: object
    LocationInfo:
      description: Entry on data center with its location ID and country, region,
        and data center description strings
      example:
        DataCenter: FTC1
        Region: Central
        ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        ID:
          description: Unique ID for data center location
          format: uuid
          type: string
        Country:
          $ref: '#/components/schemas/Country'
        Region:
          description: Region within the indicated country
          example: Central
          type: string
        DataCenter:
          description: Data center descriptor
          example: FTC1
          type: string
      type: object
    AvailableNetwork:
      description: Entry of a network available within a data center location
      example:
        IPPoolID: IPPoolID
        Description: Private network for intra-cluster communication
        LocationID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        HostUse: Default
        Purpose: Storage
        ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Name: Private
      properties:
        ID:
          description: ID of the network
          format: uuid
          type: string
        Name:
          description: The name of the network
          example: Private
          type: string
        LocationID:
          description: The location ID is the data center location of the resource.  The
            LocationID must be one of those provided by the LocationInfo array returned
            as part of the get /available-resources call.  The locations are typically
            described by country, region, and data center.
          format: uuid
          type: string
        Description:
          example: Private network for intra-cluster communication
          type: string
        HostUse:
          $ref: '#/components/schemas/NetworkHostUse'
        Purpose:
          $ref: '#/components/schemas/NetworkPurpose'
        IPPoolID:
          type: string
      type: object
    MachineSize:
      description: Description of a specific machine size offering
      example:
        Details:
          Banner2: Banner2 value
          Banner1: Banner1 value
          Bullets:
          - Bullets
          - Bullets
          Tooltip: Tooltip
          Collection: Collection1
          InfoLink: InfoLink
        ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Name: HPE-Large
      properties:
        ID:
          description: Unique ID for the machine size offering
          format: uuid
          type: string
        Name:
          description: Typical user-visible name for a machine size offering
          example: HPE-Large
          type: string
        Details:
          $ref: '#/components/schemas/FlavorDesc'
      type: object
    VolumeFlavor:
      description: |
        Description of a specific volume flavor offering.  A volume flavor will typically refer to a specific level of performance and durability as defined in the Details
      example:
        Details:
          Banner2: Banner2 value
          Banner1: Banner1 value
          Bullets:
          - Bullets
          - Bullets
          Tooltip: Tooltip
          Collection: Collection1
          InfoLink: InfoLink
        ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Name: HighPerfFlash
      properties:
        ID:
          description: Volume flavor unique ID
          format: uuid
          type: string
        Name:
          description: Typical user-visible name for a volume flavor
          example: HighPerfFlash
          type: string
        Details:
          $ref: '#/components/schemas/FlavorDesc'
      type: object
    VolumeInfo:
      description: Description of the details about a pre-existing volume
      example:
        TargetIQN: TargetIQN
        Shareable: true
        DiscoveryIP: DiscoveryIP
        Description: Description
        FlavorID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Capacity: 0
        LocationID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Name: MyVolume
      properties:
        ID:
          description: |
            Unique ID for the volume.  Referenced if the volume is to be attached to a new Host
          format: uuid
          type: string
        Name:
          description: User-provided name for the volume
          example: MyVolume
          type: string
        Description:
          description: User-provided description of the volume
          type: string
        FlavorID:
          description: The ID of the volume flavor requested when creating the volume
          format: uuid
          type: string
        Capacity:
          description: The size of the volume in KiB
          format: int64
          minimum: 0
          type: integer
        Shareable:
          description: Indicates if the volume can be attached to multiple hosts
          type: boolean
        LocationID:
          description: The location ID of the data center where the volume exists
          format: uuid
          type: string
        DiscoveryIP:
          description: The discovery IP for the iSCSI volume
          type: string
        TargetIQN:
          description: The target IQN for the iSCSI volume
          type: string
        State:
          $ref: '#/components/schemas/VolumeState'
        Status:
          $ref: '#/components/schemas/VolumeStatus'
      type: object
    MachineInventory:
      description: An entry describing the number of machines of a particular machine
        size at a specific location
      example:
        Number: 0
        LocationID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        SizeID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        LocationID:
          description: Unique ID of the data center location
          format: uuid
          type: string
        SizeID:
          description: ID of a MachineSize as listed in the MachineSizes array
          format: uuid
          type: string
        Number:
          description: The number of machines in inventory with indicated machine
            size at the indicated location
          minimum: 0
          type: integer
      type: object
    StorageInventory:
      description: An entry describing the amount of storage available to create volumes
        of a specific flavor
      example:
        FlavorID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Capacity: 1
        LocationID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        FlavorID:
          description: Unique ID of a volume flavor as listed in the the VolumeFlavors
            array
          format: uuid
          type: string
        LocationID:
          description: Unique ID of a data center location
          format: uuid
          type: string
        Capacity:
          description: Total capacity available (in GiB) to create new volumes of
            the indicated flavor at the indicated location
          format: int64
          type: integer
      type: object
    SSHKeyEntry:
      description: An entry listing an SSH key that is available for use when creating
        HostState
      example:
        ID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        Key: |
          'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCxv1C5uOeG9BBjfQbum9GupGthTFcifS4FNYxZ2ZakN9UcpD05L2lKp4OI6mfCfciOhJ9SHduZWJFM0pYfC99hIsPAHhEwWOjh3/rHKxB/U4RYN4VFWM+ShDv92+k0Hse73HhuiHKVtmRj/fltAeCFm/mPlL+McMYFhFYMIK8b/spKpXxdEBCSowHPGIn3yi0ivPWhC4wcIa9jDIela/a0t/oDnYTeIp2WMLDbpZyQsGHmKopAAvb+83JhwytQMVTI/g5pMerbqPyxKtWaWDVDtpQ7O8G877T5U3kkl4jLLOJywxrvLrfHh1UNdNvPmvRFd+ct9Q5ugj5CIMJHqWTj Joe@Laptop.local'
        Name: ExampleKey
      properties:
        ID:
          description: Unique ID of the SSH key entry
          format: uuid
          type: string
        Name:
          description: Name or description of the stored SSH key
          example: ExampleKey
          type: string
        Key:
          description: SSH key value
          example: |
            'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCxv1C5uOeG9BBjfQbum9GupGthTFcifS4FNYxZ2ZakN9UcpD05L2lKp4OI6mfCfciOhJ9SHduZWJFM0pYfC99hIsPAHhEwWOjh3/rHKxB/U4RYN4VFWM+ShDv92+k0Hse73HhuiHKVtmRj/fltAeCFm/mPlL+McMYFhFYMIK8b/spKpXxdEBCSowHPGIn3yi0ivPWhC4wcIa9jDIela/a0t/oDnYTeIp2WMLDbpZyQsGHmKopAAvb+83JhwytQMVTI/g5pMerbqPyxKtWaWDVDtpQ7O8G877T5U3kkl4jLLOJywxrvLrfHh1UNdNvPmvRFd+ct9Q5ugj5CIMJHqWTj Joe@Laptop.local'
          type: string
      type: object
    VolumeState:
      description: Current volume state expressed as a string enum value (new, allocating,
        allocated, visible, deleting, deleted, failed)
      enum:
      - new
      - allocating
      - allocated
      - visible
      - deleting
      - deleted
      - failed
      type: string
    VolumeSubState:
      description: Current update state of volume expressed as a string enum value
        (idle, update-requested, updating)
      enum:
      - idle
      - update-requested
      - updating
      type: string
    VolumeStatus:
      description: Current volume status expressed as a string enum values (ok, error,
        degraded)
      enum:
      - ok
      - error
      - degraded
      type: string
    VaStateEnum:
      description: Current volume attachment state expressed as a string enum value
        (new, exporting, attaching, ready, detaching, unexporting, deleted, failed)
      enum:
      - new
      - exporting
      - attaching
      - ready
      - detaching
      - unexporting
      - deleted
      - failed
      type: string
    VAFSConfig:
      properties:
        StorageID:
          description: Storage identifier for an array or a SDS
          type: string
        UserName:
          description: Storage array or SDS user
          type: string
        Ticket:
          description: SDS token acquired by login into the SDS for a given user.
            This is required by the FUSE client to mount volumes on host.
          type: string
        TicketExpiryTime:
          description: Ticket expiry time to help client to refresh the ticket.
          type: string
      type: object
    ProtocolParameters:
      example:
        ISCSI:
          HostIPAddress: 10.1.2.3
          CHAPSecret: CHAPSecret
          CHAPUserName: CHAPUserName
          InitiatorName: iqn.1234.com.hpe-initiator
      properties:
        Protocol:
          $ref: '#/components/schemas/ProtocolKind'
        ISCSI:
          $ref: '#/components/schemas/ISCSIParameters'
      type: object
    LocationID:
      description: The location ID is the data center location of the resource.  The
        LocationID must be one of those provided by the LocationInfo array returned
        as part of the get /available-resources call.  The locations are typically
        described by country, region, and data center.
      format: uuid
      type: string
    NetworkHostUse:
      description: |
        Indicates whether use of the network is required, default, or optional.  If the  network is required, any new create host request for that location must include this network among the requested networks.  Default and Optional are both optional networks, but imply whether they should show up initially in pre-populated fields in a graphical user interface.
      enum:
      - Required
      - Default
      - Optional
      example: Default
      type: string
    NetworkPurpose:
      description: |
        Indicates the purpose of the network.
      enum:
      - Backup
      - Storage
      - vmKernel
      - vmNSX-T
      - vMotion
      - vCHA
      - vmFT
      - iSCSI-A
      - iSCSI-B
      - Telemetry
      example: Storage
      type: string
    NewIPPool:
      example:
        NoProxy: localhost,15.10.0.10,test.com
        Proxy: http://proxy.firewall.com:8080/ or http://user:password@proxy.firewall.com:8080
        Description: Description
        BaseIP: 10.128.0.0
        DefaultRoute: 10.128.0.1
        DNS:
        - 8.8.8.8
        - 8.8.8.8
        NTP:
        - 15.0.0.11
        - 15.0.0.11
        Sources:
        - Count: 1
          Base: 10.128.0.2
        - Count: 1
          Base: 10.128.0.2
        IPVersion: IPv4
        Name: Name
      nullable: true
      properties:
        Name:
          description: Name for the IP pool
          type: string
        Description:
          description: Description for the IP pool
          type: string
        IPVersion:
          $ref: '#/components/schemas/IPVer'
        BaseIP:
          description: Base address of the IP pool
          example: 10.128.0.0
          type: string
        Netmask:
          $ref: '#/components/schemas/Netmask'
        DefaultRoute:
          description: Default route associated with the IP pool
          example: 10.128.0.1
          type: string
        Sources:
          items:
            $ref: '#/components/schemas/IPSource'
          type: array
        DNS:
          description: List of DNS servers for the IP pool
          items:
            example: 8.8.8.8
            type: string
          type: array
        Proxy:
          description: Optional web-proxy for external internet access should the
            pool actually be behind a firewall
          example: http://proxy.firewall.com:8080/ or http://user:password@proxy.firewall.com:8080
          type: string
        NoProxy:
          description: Addresses or CIDRs for which proxy requests are not made
          example: localhost,15.10.0.10,test.com
          type: string
        NTP:
          description: List of NTP servers for the IP pool
          items:
            example: 15.0.0.11
            type: string
          type: array
      required:
      - BaseIP
      - IPVersion
      - Netmask
      type: object
    HostUsageEntry:
      allOf:
      - $ref: '#/components/schemas/UsageEntryBase'
      - $ref: '#/components/schemas/HostUsageEntry_allOf'
    VolumeUsageEntry:
      allOf:
      - $ref: '#/components/schemas/UsageEntryBase'
      - $ref: '#/components/schemas/VolumeUsageEntry_allOf'
    IPVer:
      description: |
        Describes the IP version
      enum:
      - IPv4
      - IPv6
      example: IPv4
      type: string
    Netmask:
      enum:
      - /8
      - /9
      - /10
      - /11
      - /12
      - /13
      - /14
      - /15
      - /16
      - /17
      - /18
      - /19
      - /20
      - /21
      - /22
      - /23
      - /24
      - /25
      - /26
      - /27
      - /28
      - /29
      - /30
      - /31
      - /104
      - /105
      - /106
      - /107
      - /108
      - /109
      - /110
      - /111
      - /112
      - /113
      - /114
      - /115
      - /116
      - /117
      - /118
      - /119
      - /120
      - /121
      - /122
      - /123
      - /124
      - /125
      - /126
      - /127
      type: string
    IPSource:
      example:
        Count: 1
        Base: 10.128.0.2
      properties:
        Base:
          description: Base address for the IP source
          example: 10.128.0.2
          type: string
        Count:
          description: Number of IPs to count from the base
          example: 1
          type: integer
      type: object
    UseRecord:
      properties:
        Base:
          description: Address of the record
          example: 10.128.0.2
          type: string
        HostID:
          description: Unique ID of the host associated with the record
          format: uuid
          type: string
        RackID:
          description: Unique ID of the rack associated with the record
          format: uuid
          type: string
        DeviceID:
          description: Unique ID of the device associated with the record
          format: uuid
          type: string
        External:
          description: Indicates if the record is used for non Metal scope
          example: true
          type: boolean
        Usage:
          description: Usage of the record
          type: string
        AllocatedBy:
          description: User which performed the allocation of the record
          type: string
      type: object
    Pool:
      properties:
        Fragments:
          description: List of fragments for the IP pool
          items:
            $ref: '#/components/schemas/IPRange'
          type: array
        Stats:
          $ref: '#/components/schemas/IPPoolStats'
      type: object
    ServiceServerInfo:
      description: Server allocation information for a service type.
      example:
        CoresCapacity: 5
        RAMCapacity: 2.3021358869347655
        RAMAllocated: 7.061401241503109
        AllocatedCount: 1
        ServiceType: BMaaS
        CoresAllocated: 5
      properties:
        ServiceType:
          description: Service type consuming the resource
          example: BMaaS
          type: string
        AllocatedCount:
          description: Allocated number of servers.
          type: integer
        CoresCapacity:
          description: Total available CPU cores.
          type: integer
        CoresAllocated:
          description: Total allocated CPU cores.
          type: integer
        RAMCapacity:
          description: Total available memory in GiB.
          format: double
          type: number
        RAMAllocated:
          description: Total allocated memory in GiB.
          format: double
          type: number
      type: object
    ServiceStorageInfo:
      description: Storage allocation information for service type.
      example:
        AllocatedCount: 1
        ServiceType: BMaaS
        AllocatedCapacity: 0.5962134
      properties:
        ServiceType:
          description: Service type consuming the resource
          example: BMaaS
          type: string
        AllocatedCount:
          description: Allocated number of volumes.
          type: integer
        AllocatedCapacity:
          description: Total capacity of all allocated volumes in TB for a service
            type.
          format: float
          minimum: 0.0
          type: number
      type: object
    HostServerPort:
      properties:
        Name:
          description: Server port name
          example: lan5
          type: string
        HWAddr:
          description: Hardware address for the Ethernet interface (MAC)
          example: 5c:b9:01:95:64:a0
          type: string
      type: object
    HostNetworkConnection:
      properties:
        Name:
          description: Name of the network connection
          example: HostConn1
          type: string
        NetworkID:
          description: Unique ID corresponding to a network in the local data center
          format: uuid
          type: string
        IP:
          description: IP address for the network connection
          example: 10.5.3.4
          type: string
        Subnet:
          description: The IP subnet address
          example: 10.5.3.0
          type: string
        Netmask:
          enum:
          - /8
          - /9
          - /10
          - /11
          - /12
          - /13
          - /14
          - /15
          - /16
          - /17
          - /18
          - /19
          - /20
          - /21
          - /22
          - /23
          - /24
          - /25
          - /26
          - /27
          - /28
          - /29
          - /30
          - /31
          example: /24
          type: string
        Gateway:
          description: The IP subnet gateway address
          example: 10.5.3.1
          type: string
        DNS:
          description: List of DNS servers for the IP subnet
          items:
            example: 8.8.8.8
            type: string
          type: array
        VLAN:
          description: VLAN ID of the network
          type: integer
        VNI:
          description: VNI ID of the network
          type: integer
        Untagged:
          description: True if the network is untagged
          type: boolean
        Proxy:
          description: Optional web-proxy for external internet access should the
            IP subnet actually be behind a firewall
          example: http://proxy.firewall.com:8080/ or http://user:password@proxy.firewall.com:8080
          type: string
        NoProxy:
          description: Addresses or CIDRs for which proxy requests are not made
          example: localhost,15.10.0.10,test.com
          type: string
      type: object
    Country:
      enum:
      - USA
      - AFG
      - ALA
      - ALB
      - DZA
      - ASM
      - AND
      - AGO
      - AIA
      - ATA
      - ATG
      - ARG
      - ARM
      - ABW
      - AUS
      - AUT
      - AZE
      - BHS
      - BHR
      - BGD
      - BRB
      - BLR
      - BEL
      - BLZ
      - BEN
      - BMU
      - BTN
      - BOL
      - BES
      - BIH
      - BWA
      - BVT
      - BRA
      - IOT
      - BRN
      - BGR
      - BFA
      - BDI
      - KHM
      - CMR
      - CAN
      - CPV
      - CYM
      - CAF
      - TCD
      - CHL
      - CHN
      - CXR
      - CCK
      - COL
      - COM
      - COG
      - COD
      - COK
      - CRI
      - CIV
      - HRV
      - CUB
      - CUW
      - CYP
      - CZE
      - DNK
      - DJI
      - DMA
      - DOM
      - ECU
      - EGY
      - SLV
      - GNQ
      - ERI
      - EST
      - ETH
      - FLK
      - FRO
      - FJI
      - FIN
      - FRA
      - GUF
      - PYF
      - ATF
      - GAB
      - GMB
      - GEO
      - DEU
      - GHA
      - GIB
      - GRC
      - GRL
      - GRD
      - GLP
      - GUM
      - GTM
      - GGY
      - GIN
      - GNB
      - GUY
      - HTI
      - HMD
      - VAT
      - HND
      - HKG
      - HUN
      - ISL
      - IND
      - IDN
      - IRN
      - IRQ
      - IRL
      - IMN
      - ISR
      - ITA
      - JAM
      - JPN
      - JEY
      - JOR
      - KAZ
      - KEN
      - KIR
      - PRK
      - KOR
      - KWT
      - KGZ
      - LAO
      - LVA
      - LBN
      - LSO
      - LBR
      - LBY
      - LIE
      - LTU
      - LUX
      - MAC
      - MKD
      - MDG
      - MWI
      - MYS
      - MDV
      - MLI
      - MLT
      - MHL
      - MTQ
      - MRT
      - MUS
      - MYT
      - MEX
      - FSM
      - MDA
      - MCO
      - MNG
      - MNE
      - MSR
      - MAR
      - MOZ
      - MMR
      - NAM
      - NRU
      - NPL
      - NLD
      - NCL
      - NZL
      - NIC
      - NER
      - NGA
      - NIU
      - NFK
      - MNP
      - NOR
      - OMN
      - PAK
      - PLW
      - PSE
      - PAN
      - PNG
      - PRY
      - PER
      - PHL
      - PCN
      - POL
      - PRT
      - PRI
      - QAT
      - REU
      - ROU
      - RUS
      - RWA
      - BLM
      - SHN
      - KNA
      - LCA
      - MAF
      - SPM
      - VCT
      - WSM
      - SMR
      - STP
      - SAU
      - SEN
      - SRB
      - SYC
      - SLE
      - SGP
      - SXM
      - SVK
      - SVN
      - SLB
      - SOM
      - ZAF
      - SGS
      - SSD
      - ESP
      - LKA
      - SDN
      - SUR
      - SJM
      - SWZ
      - SWE
      - CHE
      - SYR
      - TWN
      - TJK
      - TZA
      - THA
      - TLS
      - TGO
      - TKL
      - TON
      - TTO
      - TUN
      - TUR
      - TKM
      - TCA
      - TUV
      - UGA
      - UKR
      - ARE
      - GBR
      - UMI
      - URY
      - UZB
      - VUT
      - VEN
      - VNM
      - VGB
      - VIR
      - WLF
      - ESH
      - YEM
      - ZMB
      - ZWE
      type: string
    FlavorDesc:
      description: Describes the details of machine size or volume flavor
      example:
        Banner2: Banner2 value
        Banner1: Banner1 value
        Bullets:
        - Bullets
        - Bullets
        Tooltip: Tooltip
        Collection: Collection1
        InfoLink: InfoLink
      properties:
        Collection:
          description: Groups flavors together to make finding a specific flavor easier
          example: Collection1
          type: string
        Banner1:
          example: Banner1 value
          type: string
        Banner2:
          example: Banner2 value
          type: string
        Bullets:
          items:
            type: string
          type: array
        InfoLink:
          description: URI to more information about the specific machine size or
            volume flavor
          type: string
        Tooltip:
          description: Supplemental tooltip text to use in GUIs
          type: string
      type: object
    ProtocolKind:
      description: The protocol to be used to attach the volume
      enum:
      - unknown
      - iscsi
      type: string
    ISCSIParameters:
      example:
        HostIPAddress: 10.1.2.3
        CHAPSecret: CHAPSecret
        CHAPUserName: CHAPUserName
        InitiatorName: iqn.1234.com.hpe-initiator
      properties:
        HostIPAddress:
          description: The IP address of the host in dotted notation.
          example: 10.1.2.3
          type: string
        InitiatorName:
          description: The full initiator name to be created. The name must be at
            least 12 characters in length and begin with "iqn.".
          example: iqn.1234.com.hpe-initiator
          type: string
        CHAPSecret:
          description: CHAPSecret is the Challenge Authentication Protocol secret
            to be shared between array and initiator. If empty, no CHAP login is enabled;
            if set it must be a string between 12 and 16 characters.
          type: string
        CHAPUserName:
          description: CHAPUserName is the CHAP username to use for CHAP authentication.
            If CHAPSecret is specified, CHAPUserName must also be specified.
          type: string
      required:
      - HostIPAddress
      - InitiatorName
      type: object
    UsageEntryBase:
      properties:
        ProjectID:
          description: Project ID that contained the host
          format: uuid
          type: string
        LocationID:
          description: The location ID is the data center location of the resource.  The
            LocationID must be one of those provided by the LocationInfo array returned
            as part of the get /available-resources call.  The locations are typically
            described by country, region, and data center.
          format: uuid
          type: string
        Allocated:
          description: Timestamp of when resource (machine or storage) was allocated
          format: date-time
          type: string
        Ready:
          description: Timestamp of when resource (host or volume) was ready for use
          format: date-time
          type: string
        Freed:
          description: Timestamp of when resource (machine or storage) was freed
          format: date-time
          type: string
        UsageStart:
          description: The start of the usage reporting window or when the resource
            was allocated
          format: date-time
          type: string
        UsageEnd:
          description: The end of the usage reporting window or when the resource
            was freed
          format: date-time
          type: string
        UsageHours:
          description: The difference between the UsageEnd and UsageStart rounded
            up to the UsageHours
          format: int64
          type: integer
        Error:
          description: Description of error that affected the usage reporting
          type: string
      type: object
    IPRange:
      properties:
        Base:
          description: Base address for the IP range
          example: 10.128.0.2
          type: string
        Count:
          description: Number of IPs to count from the base
          example: 1
          type: integer
        DefaultRoute:
          description: Default route for the IP range
          example: 10.128.0.1
          type: string
        Netmask:
          $ref: '#/components/schemas/Netmask'
        SourceBase:
          description: Base address of the Source the IPRange was allocated from
          example: 10.128.0.0
          type: string
      type: object
    IPPoolStats:
      properties:
        Total:
          description: Total number of IPs (pool capacity)
          format: int32
          type: integer
        Available:
          description: Number of non allocated IPs
          format: int32
          type: integer
        InUse:
          description: Number of allocated IPs
          format: int32
          type: integer
      type: object
    Project_allOf:
      properties:
        Profile:
          $ref: '#/components/schemas/Profile'
        Limits:
          $ref: '#/components/schemas/Limits'
        Resources:
          $ref: '#/components/schemas/ProjectResources'
        PermittedSites:
          description: Array listing the permitted site IDs
          example:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 91eec8b5-6460-4532-aad1-47b983edb63c
          items:
            format: uuid
            type: string
          type: array
      required:
      - Limits
      - Profile
    SSHKey_allOf:
      properties:
        Key:
          description: SSH key value
          example: |
            'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCxv1C5uOeG9BBjfQbum9GupGthTFcifS4FNYxZ2ZakN9UcpD05L2lKp4OI6mfCfciOhJ9SHduZWJFM0pYfC99hIsPAHhEwWOjh3/rHKxB/U4RYN4VFWM+ShDv92+k0Hse73HhuiHKVtmRj/fltAeCFm/mPlL+McMYFhFYMIK8b/spKpXxdEBCSowHPGIn3yi0ivPWhC4wcIa9jDIela/a0t/oDnYTeIp2WMLDbpZyQsGHmKopAAvb+83JhwytQMVTI/g5pMerbqPyxKtWaWDVDtpQ7O8G877T5U3kkl4jLLOJywxrvLrfHh1UNdNvPmvRFd+ct9Q5ugj5CIMJHqWTj Joe@Laptop.local'
          type: string
      required:
      - Key
    Host_allOf:
      properties:
        Description:
          example: Description of Host
          type: string
        ServiceID:
          description: The image service identifier used to image the server. ServiceID
            is one of those listed by the Images array returned as part of the get
            /available-resources call.
          format: uuid
          type: string
        ServiceFlavor:
          description: Overall flavor of server image used to image the server
          example: ubuntu
          type: string
        ServiceVersion:
          description: Version of the ServiceFlavor used to image the server
          example: 18.04-20190807
          type: string
        LocationID:
          description: The location of the machine assigned to the host.  LocationID
            is one of those listed by the LocationInfo array returned as part of the
            get /available-resources call.
          format: uuid
          type: string
        MachineSizeName:
          description: Name of the machine size used to identify and select the machine
            assigned to the host.  MachineSizes are described by the MachineSize array
            returned by the get /available-resources call.
          example: HPE Large
          type: string
        MachineSizeID:
          description: UniqueID referring to the machine size used to identify and
            select the machine assigned to the host.  MachineSizes are described by
            the MachineSize array returned by the get /available-resources call.
          format: uuid
          type: string
        MachineID:
          description: UniqueID referring to the machine on which this host is running.
          format: uuid
          type: string
        SSHKeyIDs:
          description: IDs of SSH Keys used when configuring the Host
          items:
            format: uuid
            type: string
          type: array
        SSHAuthorizedKeys:
          description: Specific SSH keys that were when configuring the host.
          items:
            $ref: '#/components/schemas/SSHKeyValue'
          type: array
        NetworkIDs:
          description: The list of IDs corresponding to the networks that were provisioned
            to the host. These networks are among those listed in the Networks array
            returned by the get /available-resources call.
          example:
          - 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - 91eec8b5-6460-4532-aad1-47b983edb63c
          items:
            format: uuid
            type: string
          type: array
        NetworkForDefaultRoute:
          description: The host's default network ID. This needs to be one of the
            values in the  "NetworkIDs" list.
          example: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          format: uuid
          type: string
        NetworkUntagged:
          description: ID of the network selected to be untagged. This needs to be
            one of the values in the  "NetworkIDs" list.
          example: 046b6c7f-0b8a-43b9-b35d-6489e6daee92
          format: uuid
          type: string
        PreAllocatedIPs:
          description: The list of pre-allocated IP addresses corresponding to the
            list of NetworkIDs. Pre-allocated IP addresses are optional, but required
            when updating a host containing Pre-allocated IP addresses.
          items:
            type: string
          type: array
        ServiceNetsProviderMAC:
          additionalProperties:
            type: string
          description: The map of Service Network (Provider) ID to Provider MAC address.   The
            Service Network must be a provider network provisioned to this host. Any
            Service Networks not included here will default to the physical MAC learned
            during machine discovery.
          example:
            "046b6c7f-0b8a-43b9-b35d-6489e6daee91": a2:c8:93:15:2a:76
          type: object
        UserData:
          description: User-provided data attached to the image configuration data
            when the host was provisioned
          type: string
        NodeID:
          description: User-provided data to represent the identity of the host within
            an application environment. For example, this could be set to represent
            the Kubernetes node ID if the host is provisioned as a Kubernetes node.
          example: Node21
          type: string
        ISCSIConfig:
          $ref: '#/components/schemas/HostISCSIConfig'
        Connections:
          description: Details describing host network connections
          items:
            $ref: '#/components/schemas/HostConnection'
          type: array
        Deleted:
          description: True if the Host has been deleted.
          type: boolean
        PortalCommOkay:
          description: Describes if the portal is in active communication to the device
          type: boolean
        PowerStatus:
          $ref: '#/components/schemas/HostPowerState'
        State:
          $ref: '#/components/schemas/HostState'
        Substate:
          $ref: '#/components/schemas/HostSubstate'
        StateTime:
          format: date-time
          type: string
        SubstateTime:
          format: date-time
          type: string
        Progress:
          format: int64
          maximum: 100
          minimum: 0
          type: integer
        Alert:
          type: boolean
        AlertInfo:
          items:
            $ref: '#/components/schemas/HostAlertInfo'
          type: array
        Workflow:
          description: The current workflow the host is in
          type: string
        SummaryStatus:
          $ref: '#/components/schemas/HealthStatus'
        Labels:
          additionalProperties:
            type: string
          description: The map of label name to label value for the host.
          example:
            serviceType: BMaaS
          type: object
      required:
      - Description
      - NetworkForDefaultRoute
      - NetworkIDs
      - NetworkUntagged
    Volume_allOf:
      properties:
        Description:
          example: Description of New Volume
          type: string
        FlavorID:
          description: The VolumeFlavorID matching an entry in the VolumeFlavors array
            returned as part of the get /available-resources call
          format: uuid
          type: string
        Capacity:
          description: The size of the volume in KiB
          example: 10485760
          format: int64
          minimum: 0
          type: integer
        Shareable:
          description: Indicates if the volume can be attached to multiple hosts
          type: boolean
        LocationID:
          description: The location of the volume (and the storage array) LocationID
            is one of those listed by the LocationInfo array returned as part of the
            get /available-resources call. Any volumes must be in the same location
            as their attached Host.
          format: uuid
          type: string
        State:
          $ref: '#/components/schemas/VolumeState'
        SubState:
          $ref: '#/components/schemas/VolumeSubState'
        Status:
          $ref: '#/components/schemas/VolumeStatus'
        Labels:
          additionalProperties:
            type: string
          description: The map of label name to label value for the volume.
          example:
            serviceType: BMaaS
          type: object
        WWN:
          description: Serial number of the volume.
          type: string
    VolumeAttachment_allOf:
      properties:
        VolumeID:
          description: Unique ID of the volume attached to the host
          format: uuid
          type: string
        HostID:
          description: Unique ID of the host connected to the volume
          format: uuid
          type: string
        HostIPAddress:
          description: Host IP address for the network connection that connects to
            the storage array
          format: ipv4
          type: string
        IQN:
          description: IQN is the full initiator name used for identification during
            iSCSI login
          example: iqn.yyyy-mm.naming-authority:unique name
          type: string
        CHAPSecret:
          description: CHAPSecret is the Challenge Authentication Protocol secret
            to be shared between array and initiator.
          type: string
        CHAPUserName:
          description: CHAPUserName is the CHAP username to use for CHAP authentication
          type: string
        LUN:
          description: LUN is the Logical Unit Number to be assigned to the volume
            on export
          type: integer
        VolumeTargetIQN:
          description: VolumeTargetIQN is the iQN for the volume, assigned by the
            array corresponding to the volume
          example: iqn.yyyy-mm.naming-authority:unique name
          type: string
        VolumeTargetIPAddress:
          description: VolumeTargetIPAddress is the IPV4 address of the iSCSI volume
            export
          format: ipv4
          type: string
        State:
          $ref: '#/components/schemas/VaStateEnum'
        FSConfig:
          allOf:
          - $ref: '#/components/schemas/VAFSConfig'
          description: File share specific configuration parameters
          nullable: true
          type: object
    Network_allOf:
      properties:
        LocationID:
          description: The location ID is the data center location of the resource.  The
            LocationID must be one of those provided by the LocationInfo array returned
            as part of the get /available-resources call.  The locations are typically
            described by country, region, and data center.
          format: uuid
          type: string
        Description:
          example: Private network for intra-cluster communication
          type: string
        HostUse:
          $ref: '#/components/schemas/NetworkHostUse'
        Purpose:
          $ref: '#/components/schemas/NetworkPurpose'
        IPPoolID:
          type: string
        VLAN:
          description: VLAN ID of the network
          type: integer
        VNI:
          description: VNI ID of the network
          type: integer
    IPPool_allOf:
      properties:
        Description:
          example: Description of IP pool
          type: string
        IPVersion:
          $ref: '#/components/schemas/IPVer'
        NetworkID:
          description: Unique ID of the network associated with the IP pool
          format: uuid
          type: string
        BaseIP:
          description: Base address of the IP pool
          example: 10.128.0.0
          type: string
        Netmask:
          $ref: '#/components/schemas/Netmask'
        DefaultRoute:
          description: Default route associated with the IP pool
          example: 10.128.0.1
          type: string
        Sources:
          items:
            $ref: '#/components/schemas/IPSource'
          type: array
        UseRecords:
          items:
            $ref: '#/components/schemas/UseRecord'
          type: array
        DNS:
          description: List of DNS servers for the IP pool
          items:
            example: 8.8.8.8
            type: string
          type: array
        Proxy:
          description: Optional web-proxy for external internet access should the
            pool actually be behind a firewall
          example: http://proxy.firewall.com:8080/ or http://user:password@proxy.firewall.com:8080
          type: string
        NoProxy:
          description: Addresses or CIDRs for which proxy requests are not made
          example: localhost,15.10.0.10,test.com
          type: string
        NTP:
          description: List of NTP servers for the IP pool
          items:
            example: 15.0.0.1
            type: string
          type: array
        Pool:
          $ref: '#/components/schemas/Pool'
      required:
      - DNS
      - DefaultRoute
      - Description
      - NTP
      - NoProxy
      - Proxy
    HostUsageEntry_allOf:
      properties:
        MachineSizeName:
          description: Name of the MachineSize requested when host was created
          example: HPE-Large
          type: string
        MachineSizeID:
          description: Unique ID of the MachineSize requested when host was created
          format: uuid
          type: string
        HostName:
          description: Name of the associated Host
          type: string
        HostID:
          description: Unique ID of the associated Host
          format: uuid
          type: string
    VolumeUsageEntry_allOf:
      properties:
        VolumeName:
          description: Name of the volume
          type: string
        VolumeID:
          description: Unique ID of the volume
          format: uuid
          type: string
        FlavorName:
          description: Name of the volume flavor used when creating the volume
          type: string
        FlavorID:
          description: Unique ID of the volume flavor used when creating the volume
          format: uuid
          type: string
        Capacity:
          description: The size of the volume in MB
          format: int64
          type: integer
  securitySchemes:
    BearerAuth:
      bearerFormat: JWT
      description: Uses JWT as a bearer token to validate access
      scheme: bearer
      type: http
    Project:
      description: The project ID. Required only when using GreenLake IAM issued JWT
        for authentication
      in: header
      name: Project
      type: apiKey
    Membership:
      description: The Metal membership ID. Required only when using Metal service
        issued JWT for authentication
      in: header
      name: Membership
      type: apiKey
