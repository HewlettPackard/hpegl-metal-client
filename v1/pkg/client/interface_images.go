// (C) Copyright 2021-2023 Hewlett Packard Enterprise Development LP

// Code generated by ifacemaker; DO NOT EDIT.

package client

import (
	_context "context"
	_nethttp "net/http"
	"os"
)

// ImagesAPI defines the client functions provided for Images.
type ImagesAPI interface {
	/*
	   Add Create a new OS image
	   Adds a new OS Image that can be referenced during host creation. If GreenLake IAM issued token is used for authentication, then it is required  to pass either &#39;spaceid&#39; header. Note that Hoster or BMaaS Access Owner role is  required for this operation.
	     - @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	     - @param fileName
	     - @param optional nil or *ImagesApiAddOpts - Optional Parameters:
	     - @param "Spaceid" (optional.String) -  GreenLake space ID

	   @return OsServiceImage
	*/
	Add(ctx _context.Context, fileName *os.File, localVarOptionals *ImagesApiAddOpts) (OsServiceImage, *_nethttp.Response, error)
	/*
	   Delete Delete an OS image
	   Deletes the OS image with the matching ID. Note that Hoster or BMaaS Access Owner role is required for this operation.
	     - @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	     - @param imageId ID of OS image to delete
	*/
	Delete(ctx _context.Context, imageId string) (*_nethttp.Response, error)
	/*
	   GetByID Retrieve an OS image its ID
	   Returns a single Os Image object with its matching ID.
	     - @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	     - @param imageId ID of OS image to return

	   @return OsServiceImage
	*/
	GetByID(ctx _context.Context, imageId string) (OsServiceImage, *_nethttp.Response, error)
	/*
	   List List of all OS Images within an tenant
	   Returns an array of all OS images objects that have been created. If GreenLake IAM issued token is used for authentication,  then it is required to pass &#39;spaceid&#39; header
	     - @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	     - @param optional nil or *ImagesApiListOpts - Optional Parameters:
	     - @param "Spaceid" (optional.String) -  GreenLake space ID

	   @return []OsServiceImage
	*/
	List(ctx _context.Context, localVarOptionals *ImagesApiListOpts) ([]OsServiceImage, *_nethttp.Response, error)
	/*
	   Update Update an OS image by its ID
	   Updates an OS Image with a matching ID. Note that Hoster or BMaaS Access Owner role is required for this operation.
	     - @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	     - @param imageId ID of OS image to update
	     - @param fileName

	   @return OsServiceImage
	*/
	Update(ctx _context.Context, imageId string, fileName *os.File) (OsServiceImage, *_nethttp.Response, error)
}
