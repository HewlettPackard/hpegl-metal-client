// (C) Copyright 2021-2023 Hewlett Packard Enterprise Development LP

// Code generated by ifacemaker; DO NOT EDIT.

package client

import (
	_context "context"
	_nethttp "net/http"
)

// SshkeysAPI defines the client functions provided for Sshkeys.
type SshkeysAPI interface {
	/*
	   Add Add a new SSH Key
	   Adds a new SSH Key that can be referenced when creating a Host. If GreenLake Platform IAM issued token is used for authentication, then it is required to pass  &#39;X-Role&#39; and &#39;X-Workspaceid&#39; headers.
	     - @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	     - @param newSshKey SSH Key that is to be added to the project
	     - @param optional nil or *SshkeysApiAddOpts - Optional Parameters:
	     - @param "XRole" (optional.String) -  GreenLake Platform role name
	     - @param "XWorkspaceid" (optional.String) -  GreenLake Platform workspace ID

	   @return SshKey
	*/
	Add(ctx _context.Context, newSshKey NewSshKey, localVarOptionals *SshkeysApiAddOpts) (SshKey, *_nethttp.Response, error)
	/*
	   Delete Delete an SSH key by ID.
	   Deletes the SSH key with the matching ID. If GreenLake Platform IAM issued token is used for authentication, then it is required to pass  &#39;X-Role&#39; and &#39;X-Workspaceid&#39; headers.
	     - @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	     - @param sshkeyId ID of sshkey to delete
	     - @param optional nil or *SshkeysApiDeleteOpts - Optional Parameters:
	     - @param "XRole" (optional.String) -  GreenLake Platform role name
	     - @param "XWorkspaceid" (optional.String) -  GreenLake Platform workspace ID
	*/
	Delete(ctx _context.Context, sshkeyId string, localVarOptionals *SshkeysApiDeleteOpts) (*_nethttp.Response, error)
	/*
	   GetByID Retrieve SSH Key by ID
	   Returns a single SSH key with matching ID. If GreenLake Platform IAM issued token is used for authentication, then it is required to pass  &#39;X-Role&#39; and &#39;X-Workspaceid&#39; headers.
	     - @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	     - @param sshkeyId ID of sshkey to return
	     - @param optional nil or *SshkeysApiGetByIDOpts - Optional Parameters:
	     - @param "XRole" (optional.String) -  GreenLake Platform role name
	     - @param "XWorkspaceid" (optional.String) -  GreenLake Platform workspace ID

	   @return SshKey
	*/
	GetByID(ctx _context.Context, sshkeyId string, localVarOptionals *SshkeysApiGetByIDOpts) (SshKey, *_nethttp.Response, error)
	/*
	   List List all sshkeys in project
	   Returns an array of all SSHKey objects defined within the project. If GreenLake Platform IAM issued token is used for authentication, then it is required to pass  &#39;X-Role&#39; and &#39;X-Workspaceid&#39; headers.
	     - @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	     - @param optional nil or *SshkeysApiListOpts - Optional Parameters:
	     - @param "XRole" (optional.String) -  GreenLake Platform role name
	     - @param "XWorkspaceid" (optional.String) -  GreenLake Platform workspace ID

	   @return []SshKey
	*/
	List(ctx _context.Context, localVarOptionals *SshkeysApiListOpts) ([]SshKey, *_nethttp.Response, error)
	/*
	   Update Update an existing SSH Key by ID.
	   Update a single SSH key with matching ID. Only &#39;Name&#39; or &#39;Key&#39; fields can be changed. If GreenLake Platform IAM issued token is used for authentication, then it is required to pass  &#39;X-Role&#39; and &#39;X-Workspaceid&#39; headers.
	     - @param ctx _context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
	     - @param sshkeyId ID of sshkey to update
	     - @param updateSshKey Updated SSH key
	     - @param optional nil or *SshkeysApiUpdateOpts - Optional Parameters:
	     - @param "XRole" (optional.String) -  GreenLake Platform role name
	     - @param "XWorkspaceid" (optional.String) -  GreenLake Platform workspace ID

	   @return SshKey
	*/
	Update(ctx _context.Context, sshkeyId string, updateSshKey UpdateSshKey, localVarOptionals *SshkeysApiUpdateOpts) (SshKey, *_nethttp.Response, error)
}
