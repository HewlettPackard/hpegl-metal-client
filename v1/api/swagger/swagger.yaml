openapi: 3.0.0
info:
  title: HPE GreenLake for bare metal API
  version: v1
  license:
    name: HPE End User License Agreement
    url: https://www.hpe.com/us/en/software/licensing.html
  description: >
    This Metal Client REST API provides access to bare metal as-a-service
    (BMaaS) within a single project context. Clients are able to create
    fully-provisioned hosts, storage volumes, and project-specific private
    networks in an isolated project environment. 
    

    Project-owned resources that can be accessed via this API include - Host, 
    Volume, VolumeAttachment, Network (project private), and SSH Key. Each API 
    call is done within a single project context. The specific Project identifier 
    must be provided within the header of for each REST call. The server will 
    validate that the provided authentication credentials (JWTs) are valid  for 
    the referenced project before any operation is performed. If a single credential
    is valid for multiple projects, the client must still reference a single project 
    in the header for each API call.  

    
    Clients can also access information about available services and resources
    through the AvailableResources object. This object provides detailed 
    information about the OS imaging options, the machine size options, the
    storage volume options, and data center locations which are needed when
    creating hosts and volumes. 

servers:  
  - url: https://client.greenlake.hpe.com{basePath}
    description: HPE GreenLake Central
    variables:
      basePath:
        default: /api/metal/rest/v1
        description: URL prefix for endpoints

security:
  - BearerAuth: []
    Project: []
  - BearerAuth: []
    Membership: []

tags:
  - name: version
    description: |
      Read-only operation to get api server build version information.
  - name: projects
    description: >
      Operations related to Projects. A Project defines an isolated space 
      for creating Hosts, Volumes, and private Networks.  A project is a.k.a.  
      Compute Group.
  - name: sshkeys
    description: >
      Operations related to SSH Keys. Clients may define SSH Keys that can then
      be referenced by ID when creating a Host.
  - name: hosts
    description: >
      Operations related to Hosts. A host is a fully-provisioned physical server. 
      Clients may create, view, list, and delete hosts. A host is a.k.a. Compute Instance.
  - name: volumes
    description: >
      Operations related to Volumes. A Volume is an external storage volume
      that persists independent of the associated host.
  - name: volume-attachments
    description: >
      Operations related to VolumeAttachments that describe how a host is connected to a volume.
  - name: networks
    description: |
      Operations related to Networks.
  - name: available-resources
    description: >
      Operations related to listing information that is needed to construct create host and
      create volume calls. This provides a detailed information about the OS imaging options, 
      the machine size (a.k.a. Compute Instance Type) options, the storage volume options, 
      data center locations, and such that are needed when creating hosts and volumes.
  - name: usage-reports
    description: >
      Operations related to retrieving information about resource usage within
      the project.
  - name: projects-info
    description: |
      Operations related to listing information related to projects.
  - name: ippools
    description: |
      Operations related to IP pools.
  - name: allocation
    description: |
      Operations related to listing information about allocation by servers and storage.

paths:
  /version:
    $ref: paths/version.yaml
  /projects:
    $ref: paths/projects.yaml
  /projects/{projectId}:
    $ref: paths/projects@{projectId}.yaml
  /projects-info:
    $ref: paths/projects-info.yaml
  /sshkeys:
    $ref: paths/sshkeys.yaml
  /sshkeys/{sshkeyId}:
    $ref: paths/sshkeys@{sshkeyId}.yaml
  /hosts:
    $ref: paths/hosts.yaml
  /hosts/{hostId}:
    $ref: paths/hosts@{hostId}.yaml
  /hosts/{hostId}/maintenance:
    $ref: paths/hosts@{hostId}@maintenance.yaml
  /hosts/{hostId}/poweron:
    $ref: paths/hosts@{hostId}@poweron.yaml
  /hosts/{hostId}/poweroff:
    $ref: paths/hosts@{hostId}@poweroff.yaml
  /hosts/{hostId}/powerreset:
    $ref: paths/hosts@{hostId}@powerreset.yaml
  /hosts/{hostId}/bootpxe:
    $ref: paths/hosts@{hostId}@bootpxe.yaml
  /hosts/{hostId}/boothdd:
    $ref: paths/hosts@{hostId}@boothdd.yaml
  /hosts/{hostId}/reimage:
    $ref: paths/hosts@{hostId}@reimage.yaml
  /hosts/{hostId}/replace:
    $ref: paths/hosts@{hostId}@replace.yaml
  /available-resources:
    $ref: paths/available-resources.yaml
  /volumes:
    $ref: paths/volumes.yaml
  /volumes/{volumeId}:
    $ref: paths/volumes@{volumeId}.yaml
  /volumes/{volumeId}/attach:
    $ref: paths/volumes@{volumeId}@attach.yaml
  /volumes/{volumeId}/detach:
    $ref: paths/volumes@{volumeId}@detach.yaml
  /volume-attachments:
    $ref: paths/volume-attachments.yaml
  /volume-attachments/{attachmentId}:
    $ref: paths/volume-attachments@{attachmentId}.yaml
  /networks:
    $ref: paths/networks.yaml
  /networks/{networkId}:
    $ref: paths/networks@{networkId}.yaml
  /usage-reports:
    $ref: paths/usage-reports.yaml
  /ippools:
    $ref: paths/ippools.yaml
  /ippools/{ippoolId}:
    $ref: paths/ippools@{ippoolId}.yaml
  /ippools/{ippoolId}/allocation:
    $ref: paths/ippools@{ippoolId}@allocation.yaml
  /ippools/{ippoolId}/return:
    $ref: paths/ippools@{ippoolId}@return.yaml
  /allocation/servers:
    $ref: paths/allocation@server.yaml
  /allocation/storage:
    $ref: paths/allocation@storage.yaml

components:
  securitySchemes:
    BearerAuth:
      description: Uses JWT as a bearer token to validate access
      type: http
      scheme: bearer
      bearerFormat: JWT
    Project:
      description: >-
        The project ID. Required only when using GreenLake IAM issued JWT for
        authentication
      type: apiKey
      in: header
      name: Project
    Membership:
      description: >-
        The Metal membership ID. Required only when using Metal service issued
        JWT for authentication
      type: apiKey
      in: header
      name: Membership
